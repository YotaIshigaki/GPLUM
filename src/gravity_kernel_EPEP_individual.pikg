EPI S32    idi:id
EPI S32    id_locali:id_local
EPI S32    myranki:myrank
EPI S32    ngbi:neighbor
EPI F64vec xi:pos
EPI F64vec vi:vel
EPI F64vec ai_d:acc_d
EPI F64    mi:mass
EPI F64    routi:r_out
EPI F64    rsearchi:r_search
F32 eps2

EPJ S32    idj:id
EPJ S32    id_localj:id_local
EPJ S32    myrankj:myrank
EPJ S32    ngbj:neighbor
EPJ F64vec xj:pos
EPJ F64vec vj:vel
EPJ F64vec aj_d:acc_d
EPJ F64    mj:mass
EPJ F64    routj:r_out
EPJ F64    rsearchj:r_search

FORCE F32vec af:acc
FORCE F32    pf:phi
FORCE S32    nngb:neighbor
FORCE S32    idngb:id_neighbor

EPI local F32vec xiloc
EPI local F32    rsearchiloc
EPI local F32    routiloc

EPJ local F32vec xjloc
EPJ local F32    mjloc
EPJ local F32    rsearchjloc
EPJ local F32    routjloc

xiloc = xi - xi[0]
rsearchiloc = rsearchi
routiloc = routi

xjloc = xj - xi[0]
rsearchjloc = rsearchj
routjloc = routj
mjloc = mj

rout     = max(routjloc, routiloc)
rsearch  = max(rsearchjloc, rsearchiloc)
rout2    = rout * rout
rsearch2 = rsearch * rsearch * 1.1025f

rij     = xjloc - xiloc
r2_real = rij*rij + eps2
r2      = r2_real
r2 = max(r2_real, rout2)

if r2_real < rsearch2
   nngb = nngb + 1
   if r2_real > eps2
      idngb = max(idngb, idj)
   endif
endif

r_inv   = rsqrt(r2)
tmp     = 3.0f - r2*(r_inv*r_inv)
r_inv  *= (tmp * 0.5f)
r2_inv  = r_inv * r_inv
mr_inv  = mjloc * r_inv
mr3_inv = r2_inv * mr_inv

af    += mr3_inv * rij
pf    -= mr_inv
