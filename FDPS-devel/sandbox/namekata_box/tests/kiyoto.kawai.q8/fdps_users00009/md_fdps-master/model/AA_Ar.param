//=======================================================================================
//  Ar gas model
//    ref: 法政大学情報メディア研究センター研究報告, Vol.22, 2009
//         Isotherm of Argon by Molecular Dynamics Simulation and Vand der Waals Theory
//=======================================================================================

//=======================================================================================
//  definition of parameters on each atoms.
//    atom_name, res_name, mass, vdw_d, vdw_r
//      atom_name [-]              string, must be same to "atom_name" in ***.mol2 file.
//      res_name  [-]              string, up to 3 characters for pdb files.
//      mass      [atomic weight]
//      vdw_d     [kcal/mol]       function: V(r) = vdw_d*((vdw_r/r)^12 - 2*(vdw_r/r)^6)
//      vdw_r     [angstrom]
//=======================================================================================
@<PARAM>ATOM
    Ar  gas  39.948   0.24828   3.8276

//=======================================================================================
//  definition of bond potential.
//    i, j, form, r0, k, a
//      i, j [-]          string, must be same to "atom_name" in ***.mol2 file.
//      form [-]          must be "none", "harmonic", or "anharmonic".
//      r0   [angstrom]   equivalent length
//      k    [kcal/mol]
//      a    [/angstrom]  used in "anharmonic" form.
//
//    form == "none",       free stretching.
//    form == "harmonic",   function: V(r) = 0.5*k*(r - r0)^2
//    form == "anharmonic", function: V(r) = k*[ar^2 - ar^3 + 7/12*ar^4], ar = a*(r - r0)
//=======================================================================================
@<PARAM>BOND

//=======================================================================================
//  definition of angle potential.
//    j, i, k, form, theta0, k
//      j, i, k [-]              j-i-k shape, string, must be same to "atom_name" in ***.mol2 file.
//      form    [-]              must be "none" or "harmonic". other form is not defined.
//      theta0  [degree]         equivalent angle
//      k       [kcal/mol·rad^2]
//
//    form == "none",     free rotation.
//    form == "harmonic", function: V(phi) = 0.5*k*[cos(phi) - cos(theta0)]^2/[sin(theta0)]^2
//=======================================================================================
@<PARAM>ANGLE

//=======================================================================================
//  definition of torsion potential.
//    shape, i, j, k, l, form, v1, v2, v3
//      shape       [-]         must be "dihedral" or "improper"
//      i, j, k, l  [-]         i-jk-l shape, string, must be same to "atom_name" in ***.mol2 file.
//      form        [-]         must be "none", "cos", or "OPLS_3".
//
//    form == "none" case, free rotation.
//      v1, v2, v3  [-]         ignored.
//
//    form == "cos" case, CHARMM style.
//      v1 = theta0 [degree]    equivalent angle
//      v2 = v      [kcal/mol]  function: V(phi) = 0.5*v*(1-cos(n*phi - theta0))
//      v3 = n      [integer]   number of local minimum point
//
//    form == "OPLS_3" case, OPLS_AA style.
//      v1, v2, v3  [kcal/mol]  function: V(phi) = 0.5*v1*(1+cos(phi)) + 0.5*v2*(1-cos(2*phi)) + 0.5*v3*(1+cos(3*phi))
//=======================================================================================
@<PARAM>TORSION

//=======================================================================================
//  definition of scaling coefficient for intra-mask.
//      scaling_LJ       1-2mask  1-3mask  1-4mask...
//      scaling_coulomb  1-2mask  1-3mask  1-4mask...
//          [-] numeric. accepts any order length (must be continous from 1-2 level).
//=======================================================================================
@<PARAM>SCALING
scaling_LJ       0.0  0.0  0.5
scaling_coulomb  0.0  0.0  0.5
