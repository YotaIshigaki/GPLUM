# (i) PATH setting
FFTW_LOC = /bwfefs/opt/x86_64/fftw/3.3.6/
FFTW_INC = -I$(FFTW_LOC)/include
#FFTW_LIB  = -L$(FFTW_LOC)/lib -lfftw3 
#FFTW_LIB  = -L$(FFTW_LOC)/lib -lfftw3_omp -lfftw3
FFTW_LIB  = -L$(FFTW_LOC)/lib -lfftw3_mpi -lfftw3_omp -lfftw3

FDPS_LOC  = ../../../
PMM_ROOT  = $(FDPS_LOC)/src/particle_mesh_multipole
DCT_ROOT  = $(FDPS_LOC)/src/direct_sum
EWALD_ROOT = $(FDPS_LOC)/src/ewald
FDPS_INC  = -I$(FDPS_LOC)/src -I$(PMM_ROOT) -I$(DCT_ROOT) -I$(EWALD_ROOT)
FDPS_LIB  = 
LDFLAGS   = $(FDPS_LIB) $(FFTW_LIB)

# (ii) Compiler and compile options
#CXX=time -p icpc
CXX=time -p mpiicpc
#CXXFLAGS = -std=c++11 -O0 -ftrapuv -debug all -g
CXXFLAGS = -std=c++11 -O3 -ipo -xCORE-AVX512 -no-prec-div
CXXFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -qopenmp
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL
CXXFLAGS += -DPARTICLE_SIMULATOR_USE_SFINAE_OLD_IMPL
CXXFLAGS += -DPARTICLE_SIMULATOR_STD_COMPLEX_NOT_HAVING_SETTER
CXXFLAGS += -DPARTICLE_SIMULATOR_USE_ERFC_IN_MATH_H
#CXXFLAGS += -DCHECK_DIVIDE_BY_ZERO_ERROR_IN_FORCE_KERNEL
#CXXFLAGS += -DSANITY_CHECK_REALLOCATABLE_ARRAY=2
CXXFLAGS += $(FDPS_INC) $(FFTW_INC)

# (iii) Phantom-GRAPE setting
use_phantom_grape_x86 = yes
ifeq ($(use_phantom_grape_x86),yes)
PG_ROOT = ./phantom_grape/kohji-phantom-grape-bf6ea00b8f04/PG5/newton/libpg5
CXXFLAGS += -I$(PG_ROOT) -DENABLE_PHANTOM_GRAPE_X86
LDFLAGS += -L$(PG_ROOT) -lpg5
PG_BUILD = cd $(PG_ROOT) && $(MAKE) distclean libpg5.a
PG_CLEAN = cd $(PG_ROOT) && $(MAKE) distclean
else
PG_BUILD =
PG_CLEAN = 
endif

# (iv) Job submission variables
QSUB = pjsub
JOB_FILE_NAME = job.hokusai-bw.sh
#WORKDIR = ./work-hokusai-bw/ewald
WORKDIR = ./work-hokusai-bw/full_run


#---------------------------------
TARGET = cosmology.out

OBJ = make_directory.o \
      mathematical_constants.o \
      main.o
HDR = make_directory.h \
      mathematical_constants.h \
      cosmology.hpp \
      run_param.hpp \
      user_defined.hpp \
      io.hpp \
      timestep.hpp \
      leapfrog.hpp 

%.o: %.cpp $(HDR)
	$(CXX) -c $< $(CXXFLAGS)

all: $(OBJ)
	$(PG_BUILD)
	$(CXX) $(CXXFLAGS) $(OBJ) -o $(TARGET) $(LDFLAGS)
	mkdir -p $(WORKDIR)
	mv $(TARGET) $(WORKDIR)
	cp $(JOB_FILE_NAME) $(WORKDIR)
	cd $(WORKDIR); $(QSUB) $(JOB_FILE_NAME) 

clean:
	rm -f $(OBJ)

distclean: clean
	$(PG_CLEAN)
	rm -f $(TARGET)

