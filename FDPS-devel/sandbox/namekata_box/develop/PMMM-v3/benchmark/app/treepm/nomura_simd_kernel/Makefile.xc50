#======================================================================
#   Numerical Libraries and Compilers
#======================================================================

FFTW_LOC = /opt/cray/pe/fftw/3.3.6.3/x86_skylake
FFTW_INC = -I$(FFTW_LOC)/include
FFTW_LIB = -L$(FFTW_LOC)/lib  -lfftw3f_mpi -lfftw3f_omp -lfftw3f -lm

FDPS_PATH = ../../../../
PM_PATH = $(FDPS_PATH)/src/particle_mesh
FDPS_INC = -I$(FDPS_PATH)/src -I$(PM_PATH)
FDPS_LIB = -L$(PM_PATH) -lpm

CXXFLAGS_COMMON = -std=c++11 -O2 -ffast-math -funroll-loops $(FDPS_INC) $(FFTW_INC) -I./inc
LDFLAGS += $(FDPS_LIB) $(FFTW_LIB)
#CXXFLAGS_COMMON += -g

CXXFLAGS_COMMON += -mavx512f -mavx512dq -DENABLE_AVX512
CXXFLAGS_COMMON += -DENABLE_SINGLE
CXXFLAGS_COMMON += -DTUNING # for time profile

CXX = CC
CXXFLAGS = $(CXXFLAGS_COMMON)
#CXXFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -fopenmp
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL


# Job submission variables
QSUB = qsub
JOB_FILE_NAME = job.xc50.sh
WORKDIR = /work/namektds/nomura_simd_kernel

#----------------------------------------------------------------------
#   Source and Object files
#----------------------------------------------------------------------
SRCS	= main.cpp
HEDS    = user_defined_class.h  kernel.hpp

TARGET = main.out

$(TARGET): Makefile  $(SRCS) $(HEDS)
	$(CXX) $(SRCS) $(CXXFLAGS) -o $(TARGET) $(LDFLAGS) 
	mkdir -p $(WORKDIR)
	mv $@ $(WORKDIR)
	cp $(JOB_FILE_NAME) $(WORKDIR)
	cd $(WORKDIR); $(QSUB) $(JOB_FILE_NAME) 
	
clean:
	rm -f $(TARGET) *.o

distclean: clean
	rm -rf result

