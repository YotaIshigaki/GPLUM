#ifndef PAIRLIST_H
#define PAIRLIST_H

#include "Common.h"
#include "ParticleInfo.h"

#ifndef MAX_PAIR
#define MAX_PAIR 5000
#endif

bool addljpairlist(int *pid,
                    int *lj,
                    int *npair,
                    const ParticlePosCharge& particlei,
                    const Atomtype& atomi,
                    const PosChargeArray& particlej,
                    const AtomtypeArray& atomja,
                    const TypeRange& typerange,
                    const double cutoff2,
                    const double margin2,
                    const bool self,
                    const int i,
                    const int offset=0);
bool addljcpairlist(int *pid,
                    int *lj,
                    int *npair,
                    const ParticlePosCharge& particlei,
                    const Atomtype& atomi,
                    const PosChargeArray& particlej,
                    const AtomtypeArray& atomja,
                    const TypeRange& typerange,
                    const double cutoff2,
                    const double margin2,
                    const bool self,
                    const int i,
                    const int offset=0);
bool addljcpairlist(int *pid,
                    int *lj,
                    int *npair,
                    const ParticlePosCharge& particlei,
                    const Atomtype& atomi,
		    const WHPair& waterh,
                    const PosChargeArray& particlej,
                    const AtomtypeArray& atomja,
                    const TypeRange& typerange,
                    const double cutoff2,
                    const double margin2,
                    const bool self,
                    const int i,
                    const int offset=0);
template<typename GPA>
bool makeljpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const ParticlePosCharge& particlei,
                      const Atomtype& atomi,
                      const GPA& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);
template<typename GPA>
bool makeljcpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const ParticlePosCharge& particlei,
                      const Atomtype& atomi,
                      const GPA& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);
template<typename GPA>
bool makeljcpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const ParticlePosCharge& particlei,
                      const Atomtype& atomi,
		      const WHPair& waterh,
                      const GPA& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);

template<typename PA, typename GPA>
bool makeljpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const double cutoff2,
                     const double margin2,
                     const bool self);
template<typename PA, typename GPA>
bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const double cutoff2,
                     const double margin2,
                     const bool self);
template<typename PA, typename GPA>
bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
		     const WaterList& waterlist,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const double cutoff2,
                     const double margin2,
                     const bool self);

template<typename GPA>
bool makeljpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const ParticlePosCharge& particlei,
                      const Atomtype& atomi,
                      const GPA& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const int selfnpair,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);
template<typename GPA>
bool makeljcpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const ParticlePosCharge& particlei,
                      const Atomtype& atomi,
                      const GPA& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const int selfnpair,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);

template<typename PA, typename GPA>
bool makeljpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const int *selfnpair,
                     const double cutoff2,
                     const double margin2,
                     const bool self);
template<typename PA, typename GPA>
bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const int *selfnpair,
                     const double cutoff2,
                     const double margin2,
                     const bool self);
template<typename PA, typename GPA>
bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const PA& particlei,
                     const std::vector<TypeRange>& typerangei,
		     const WaterList& waterlist,
                     const GPA& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const int *selfnpair,
                     const double cutoff2,
                     const double margin2,
                     const bool self);

bool addljcpairlist(int *pid,
                    int *lj,
                    int *npair,
                    const Particle& particlei,
                    const ParticleArray& particlej,
                    const TypeRange& typerange,
                    const double cutoff2,
                    const double margin2,
                    const bool self,
                    const int i,
		    const int offset=0);

bool makeljcpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const Particle& particlei,
                      const ParticleArray& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);

bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const ParticleArray& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const ParticleArray& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const double cutoff2,
                     const double margin2,
                     const bool self);

bool addljcpairlist(int *pid,
                    double (*pos)[3],
                    double *charge,
                    double (*lj)[4],
                    int *npair,
                    const Particle& particlei,
                    const ParticleArray& particlej,
                    const TypeRange& typerange,
                    const double cutoff2,
                    const double margin2,
                    const bool self,
                    const int i,
		    const int offset=0);

bool makeljcpairlist1(int *pid,
                      double (*pos)[3],
                      double *charge,
                      double (*lj)[4],
                      int *npair,
                      const Particle& particlei,
                      const ParticleArray& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);

bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     double (*pos)[MAX_PAIR][3],
                     double (*charge)[MAX_PAIR],
                     double (*lj)[MAX_PAIR][4],
                     int *npair,
                     int *iid,
                     double (*posi)[3],
                     double *chargei,
                     int *npl,
                     const ParticleArray& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const ParticleArray& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
                     const double cutoff2,
                     const double margin2,
                     const bool self);

bool makeljcpairlist1(int *pid,
                      int *lj,
                      int *npair,
                      const Particle& particlei,
                      const ParticleArray& particlej,
                      const std::vector<TypeRange>& typerange,
                      const std::vector<int>& shorttarget_index,
		      const int selfnpair,
                      const double cutoff2,
                      const double margin2,
                      const bool self,
                      const int i);

bool makeljcpairlist(int (*pid)[MAX_PAIR],
                     int (*lj)[MAX_PAIR],
                     int *npair,
                     int *iid,
                     int *npl,
                     const ParticleArray& particlei,
                     const std::vector<TypeRange>& typerangei,
                     const ParticleArray& particlej,
                     const std::vector<TypeRange>& typerangej,
                     const std::vector<std::vector<int> >& shorttarget_index,
		     const int *selfnpair,
                     const double cutoff2,
                     const double margin2,
                     const bool self);


template<typename PA>
void updatepairlistpos1(const int *pid,
                        double (*pos)[3],
                        const int npair,
                        const PA& particlej);

template<typename PA>
void updatepairlistpos(const int (*pid)[MAX_PAIR],
                       double (*pos)[MAX_PAIR][3],
                       const int *npair,
                       const int npl,
                       const PA& particlej);

void importpairforce(ForceArray& forcei,
                     const int *iid,
                     const double (*pforce)[3],
                     const int npl);
#endif
