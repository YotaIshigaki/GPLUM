% This is a style file for writing tutorial documents of FDPS.
% This style file is introduced to make it easy to write tutorial
% document for multiple programing language (C++, Fortran, C).
% 
% (c) FDPS developer team (written by Daisume Namekata)
%
\ProvidesPackage{fdps-tutorial}
   [2018/10/11 v0.1 LaTeX package for writing tutorial documents of FDPS]

%%% Load packages
\RequirePackage[utf8]{inputenc}
\RequirePackage{amssymb}
\RequirePackage{amsmath}
\RequirePackage{ascmac}
\RequirePackage{bm}
\RequirePackage[dvipdfmx,x11names,table]{xcolor} % dvipdfmxオプションは必須
\RequirePackage[dvipdfmx]{graphicx}
\RequirePackage{spverbatim} % 折り返し可能なverbを使える
\RequirePackage{fancyvrb} % verbatim環境の中でitalicを使用するため
\RequirePackage{wrapfig}
\RequirePackage{lscape}
\RequirePackage{setspace}
\RequirePackage{here} % 図表をその場に強制的に表示させるため.
%----------------------------------------------------------------------
% [Note] ``here" package must be included before ``hyperref" package
%        if both packages are used together. Otherwise, the following
%        error occurs:
%        Object @figure.1 already defined.
%----------------------------------------------------------------------
\RequirePackage[dvipdfmx]{hyperref}
\RequirePackage{pxjahyper}
%----------------------------------------------------------------------
% [Note] ``pxjahyper" package enables to use advanced hyperlink.
%        This package must be included after the inclusion of
%        ``hyperref" package.
%----------------------------------------------------------------------
\RequirePackage{enumitem}
\RequirePackage{titlesec}
\RequirePackage[htt]{hyphenat}
\RequirePackage[normalem]{ulem}
\RequirePackage{tabularx,booktabs} % 可変サイズの表作成に必要
\RequirePackage{url} % To use \path{} command
\RequirePackage{fancyhdr} % For header & footer setting
\RequirePackage{listings}
\RequirePackage{authblk} % タイトル表示のカスタマイズ
\RequirePackage{makeidx} % 索引作成
\RequirePackage{multirow} % 表の行を結合するのに必要
\RequirePackage{pdflscape} % Landscape の表の作成のため
\RequirePackage{xspace} % To adjust spaces after LaTeX commands


%%% Define constants that represent the programing language for which
%   we're writing a tutorial document.
\newcounter{CPLUSPLUS} % C++ language
\setcounter{CPLUSPLUS}{1} % *** DO NOT CHANGE! ***
\newcounter{FORTRAN} % Fortran
\setcounter{FORTRAN}{2} % *** DO NOT CHANGE! ***
\newcounter{CLANG} % C language
\setcounter{CLANG}{3} % *** DO NOT CHANGE! ***

%%% Define constants that represent the language which is used to
%   describe a tutorial document.
\newcounter{JAPANESE} % Japanese
\setcounter{JAPANESE}{1} % *** DO NOT CHANGE! ***
\newcounter{ENGLISH} % English
\setcounter{ENGLISH}{2} % *** DO NOT CHANGE! ***

%%% Declare variables that store 
\newcounter{PROGLANG} % Programing language
\newcounter{DOCLANG} % Document language 

%%% Set the value of PROGLANG
\DeclareOption{cpp}{\setcounter{PROGLANG}{\value{CPLUSPLUS}}} 
\DeclareOption{ftn}{\setcounter{PROGLANG}{\value{FORTRAN}}}
\DeclareOption{c}{\setcounter{PROGLANG}{\value{CLANG}}}
\DeclareOption{ja}{\setcounter{DOCLANG}{\value{JAPANESE}}}
\DeclareOption{en}{\setcounter{DOCLANG}{\value{ENGLISH}}}
\ProcessOptions\relax

%%% Create new if commands
\newif\ifCpp
\newif\ifFtn
\newif\ifC
\newif\ifIF % IF := interface
\newif\ifJP
\newif\ifEN
% \ifCpp
\ifnum\value{PROGLANG}=\value{CPLUSPLUS}
\Cpptrue
\else
\Cppfalse
\fi
% \ifFtn
\ifnum\value{PROGLANG}=\value{FORTRAN}
\Ftntrue
\else
\Ftnfalse
\fi
% \ifC
\ifnum\value{PROGLANG}=\value{CLANG}
\Ctrue
\else
\Cfalse
\fi
% \ifIF
\ifnum\value{PROGLANG}=\value{FORTRAN}
\IFtrue
\else
\ifnum\value{PROGLANG}=\value{CLANG}
\IFtrue
\else
\IFfalse
\fi
\fi
% \ifJP
\ifnum\value{DOCLANG}=\value{JAPANESE}
\JPtrue
\else
\JPfalse
\fi
% \ifEN
\ifnum\value{DOCLANG}=\value{ENGLISH}
\ENtrue
\else
\ENfalse
\fi
% \endif*
\let\endifCpp\fi
\let\endifFtn\fi
\let\endifC\fi
\let\endifIF\fi
\let\endifJP\fi
\let\endifEN\fi

%%% Define common macros
\ifJP
\def\affiliation{理化学研究所 計算科学研究センター 粒子系シミュレータ研究チーム}
\endifJP
\ifEN
\def\affiliation{Paricle Simulator Research Team, RIKEN Center for Computational Science, RIKEN}
\endifEN

%%% Define advanced macros to put a description into LaTeX source.
%   Note that the macros below cannot be used if arguments contains
%   some LaTeX commands or environments. Below is the list of such
%   commands or environments:
%     verbatim, spverbatim, Verbatim (fancyvrb package)
%     \footnote{} \item
%   
% (1) Macro to put a description for each programing language
\long\def\describeForEach#1#2#3{
\ifCpp
#1
\endifCpp
\ifFtn
#2
\endifFtn
\ifC
#3
\endifC
}
% (2) Macro to put a description for programing languages
%     that use FDPS via ``interface"".
%     (currently, Fortran and C).
\long\def\describeForIF#1{
\ifFtn
#1
\endifFtn
\ifC
#1
\endifC
}
% (3) Macro to put a description for C++ language
\long\def\describeForCpp#1{
\ifCpp
#1
\endifCpp
}
% (4) Macro to put a description for Fortran language
\long\def\describeForFtn#1{
\ifFtn
#1
\endifFtn
}
% (5) Macro to put a description for C language
\long\def\describeForC#1{
\ifC
#1
\endifC
}
% (6) Macro to put a code for each programing language
\long\def\describeCodeForEach#1#2#3#4{
\ifCpp
\begin{lstlisting}[caption=#1]
#2
\end{lstlisting}
\endifCpp
\ifFtn
\begin{lstlisting}[caption=#1]
#3
\end{lstlisting}
\endifFtn
\ifC
\begin{lstlisting}[caption=#1]
#4
\end{lstlisting}
\endifC
}

%%% Define advanced macros to put ``words" into LaTeX source.
%   Several features in a programing language are common to
%   other programing languages. Typical example is class in C++,
%   structure in C, and derived data type in Fortran.
%   It is convenient for us to enable to write these in a same
%   command. 
%
%   < Rules for naming macros >
%     (i)  If a macro name consists of single english word,
%          we use lower-case letters.
%     (ii) If a macro name consists of multiple english words or
%          their abbreviations, we use lower camel case.
% (1) For japanese
\ifJP
\ifCpp
\def\docTitle{FDPS ユーザチュートリアル}
\def\progLangName{C++}
\def\dirNameBelowSampleDir{c++}
\def\structure{クラス}
\def\procedure{\texttt{void} 関数}
\def\function{関数}
\def\mainFunc{メイン関数}
\def\fileNameOfMainFunc{\path{main.cpp}}
\def\mainFuncName{\path{main()}}
\endifCpp
\ifFtn
\def\docTitle{FDPS Fortranインタフェース ユーザチュートリアル}
\def\progLangName{Fortran}
\def\dirNameBelowSampleDir{fortran}
\def\structure{派生データ型}
\def\procedure{サブルーチン}
\def\function{関数}
\def\mainFunc{メインルーチン}
\def\fileNameOfMainFunc{\path{f_main.F90}}
\def\mainFuncName{\path{f_main()}}
\endifFtn
\ifC
\def\docTitle{FDPS C言語インタフェース ユーザチュートリアル}
\def\progLangName{C言語}
\def\dirNameBelowSampleDir{c}
\def\structure{構造体}
\def\procedure{\texttt{void} 関数}
\def\function{関数}
\def\mainFunc{メイン関数}
\def\fileNameOfMainFunc{\path{c_main.c}}
\def\mainFuncName{\path{c_main()}}
\endifC
\def\psys{粒子群}
\def\dinfo{領域情報}
\def\tree{相互作用ツリー}
\endifJP
% For english
\ifEN
\ifCpp
\def\docTitle{FDPS Tutorial}
\def\progLangName{C++\xspace}
\def\dirNameBelowSampleDir{c++}
\def\structure{class\xspace}
\def\structures{classes\xspace}
\def\procedure{\texttt{void} function\xspace}
\def\procedures{\texttt{void} functions\xspace}
\def\function{function\xspace}
\def\functions{functions\xspace}
\def\mainFunc{main function\xspace}
\def\fileNameOfMainFunc{\path{main.cpp}\xspace}
\def\mainFuncName{\path{main()}\xspace}
\endifCpp
\ifFtn
\def\docTitle{FDPS Fortran Interface Tutorial}
\def\progLangName{Fortran\xspace}
\def\dirNameBelowSampleDir{fortran}
\def\structure{derived data type\xspace}
\def\structures{derived data types\xspace}
\def\procedure{subroutine\xspace}
\def\procedures{subroutines\xspace}
\def\function{function\xspace}
\def\functions{functions\xspace}
\def\mainFunc{main routine\xspace}
\def\fileNameOfMainFunc{\path{f_main.F90}\xspace}
\def\mainFuncName{\path{f_main()}\xspace}
\endifFtn
\ifC
\def\docTitle{FDPS C Interface Tutorial}
\def\progLangName{C language\xspace}
\def\dirNameBelowSampleDir{c}
\def\structure{structure\xspace}
\def\structures{structures\xspace}
\def\procedure{\texttt{void} function\xspace}
\def\procedures{\texttt{void} functions\xspace}
\def\function{function\xspace}
\def\functions{functions\xspace}
\def\mainFunc{main function\xspace}
\def\fileNameOfMainFunc{\path{c_main.c}\xspace}
\def\mainFuncName{\path{c_main()}\xspace}
\endifC
\def\psys{\textsf{ParticleSystem}\xspace}
\def\dinfo{\textsf{DomainInfo}\xspace}
\def\tree{\textsf{TreeForForce}\xspace}
\endifEN % End of the setting for English

%%% Define commands that represents FDPS's user-defined types
\def\FP{\textsf{FullParticle}\xspace}
\def\EPI{\textsf{EssentialParticleI}\xspace}
\def\EPJ{\textsf{EssentialParticleJ}\xspace}
\def\FORCE{\textsf{Force}\xspace}

%%% Define commands that represents APIs of FDPS
\ifCpp % for C++
%--- ParticleSystem APIs ---
\def\createPsys{}
\def\initPsys{\texttt{initialize}\xspace}
\def\getPsysPtr{}
\def\setNptclLoc{\texttt{setNumberOfParticleLocal}\xspace}
\def\exchangeParticle{\texttt{exchangeParticle}\xspace}
%--- DomainInfo APIs ---
\def\initDinfo{\texttt{initialize}\xspace}
\def\decomposeDomainAll{\texttt{decomposeDomainAll}\xspace}
%--- TreeForForce APIs ---
\def\createTree{}
\def\initTree{\texttt{initialize}\xspace}
\def\calcForceAllAndWriteBack{\texttt{calcForceAllAndWriteBack}\xspace}
\endifCpp
\ifFtn % for Fortran
%--- ParticleSystem APIs ---
\def\createPsys{\texttt{create\_psys}\xspace}
\def\initPsys{\texttt{init\_psys}\xspace}
\def\getPsysPtr{\texttt{get\_psys\_fptr}\xspace}
\def\setNptclLoc{\texttt{set\_nptcl\_loc}\xspace}
\def\exchangeParticle{\texttt{exchange\_particle}\xspace}
%--- DomainInfo APIs ---
\def\initDinfo{\texttt{init\_dinfo}\xspace}
\def\decomposeDomainAll{\texttt{decompose\_domain\_all}}
%--- TreeForForce APIs ---
\def\createTree{\texttt{create\_tree}\xspace}
\def\initTree{\texttt{init\_tree}\xspace}
\def\calcForceAllAndWriteBack{\texttt{calc\_force\_all\_and\_write\_back}\xspace}
\endifFtn
\ifC % for C
%--- ParticleSystem APIs ---
\def\createPsys{\texttt{fdps\_create\_psys}\xspace}
\def\initPsys{\texttt{fdps\_init\_psys}\xspace}
\def\getPsysPtr{\texttt{fdps\_get\_psys\_cptr}\xspace}
\def\setNptclLoc{\texttt{fdps\_set\_nptcl\_loc}\xspace}
\def\exchangeParticle{\texttt{fdps\_exchange\_particle}\xspace}
%--- DomainInfo APIs ---
\def\initDinfo{\texttt{fdps\_init\_dinfo}\xspace}
\def\decomposeDomainAll{\texttt{fdps\_decompose\_domain\_all}\xspace}
%--- TreeForForce APIs ---
\def\createTree{\texttt{fdps\_create\_tree}\xspace}
\def\initTree{\texttt{fdps\_init\_tree}\xspace}
\def\calcForceAllAndWriteBack{\texttt{fdps\_calc\_force\_all\_and\_write\_back}\xspace}
\endifC

%%% Define other useful commands related to FDPS
\newcommand{\dirNameNbodySample}{\texttt{\$(FDPS)/sample/\dirNameBelowSampleDir/nbody}}
\newcommand{\dirNameSPHSample}{\texttt{\$(FDPS)/sample/\dirNameBelowSampleDir/sph}}
\newcommand{\dirNamePPPMSample}{\texttt{\$(FDPS)/sample/\dirNameBelowSampleDir/p3m}}
\newcommand{\dirNameTreePMSample}{\texttt{\$(FDPS)/sample/\dirNameBelowSampleDir/treepm}}
\newcommand{\dirNameNbodySPHSample}{\texttt{\$(FDPS)/sample/\dirNameBelowSampleDir/nbody+sph}}

%%% Define commands
\newcommand{\ulBold}[1]{\underline{\textbf{#1}}}
\newcommand{\redText}[1]{\textcolor{red}{#1}}

%%% Setting for document geometry
% (1) Page size 
\topmargin=-5mm
\oddsidemargin=-5mm
\evensidemargin=-5mm
\textheight=235mm
\textwidth=165mm
% (2) Page header & footer 
%    (requires fancyhdr package)
\pagestyle{fancy}
\lhead{}
\chead{}
\rhead{\leftmark}

%%% Setting for document structure
% Define subsubsubsection, etc.
\setcounter{secnumdepth}{5}
\makeatletter
\newcommand{\subsubsubsection}{\@startsection{paragraph}{4}{\z@}%
{1.5\baselineskip \@plus.5\dp0 \@minus.2\dp0}%
{.5\baselineskip \@plus2.3\dp0}%
{\reset@font\normalsize\bfseries}
}
\newcommand{\subsubsubsubsection}{\@startsection{subparagraph}{5}{\z@}%
{1.5\baselineskip \@plus.5\dp0 \@minus.2\dp0}%
{.5\baselineskip \@plus2.3\dp0}%
{\reset@font\normalsize\itshape}
}
\makeatother
\setcounter{tocdepth}{5}

%%% Set footnote style
\ifJP
\renewcommand{\thefootnote}{注\arabic{footnote})}
\endifJP
\ifEN
\renewcommand{\thefootnote}{\arabic{footnote})}
\endifEN

%%% Set the background color of section 
\titleformat{\section}[block]
{}{}{0pt}
{
\colorbox{Snow4}{\begin{picture}(0,15)\end{picture}}
\hspace{1pt}
\normalfont \LARGE\bfseries \thesection
\hspace{5pt}
}
[
\begin{picture}(100,0)
\put(3,20){\color{Snow4}\line(1,0){400}}
\end{picture}
\\
\vspace{-50pt}
]

%%% Define commands for using italic font in the fancyvrb environment
\newcommand\vrbbf[1]{\textbf{#1}}
\newcommand\vrbit[1]{\textit{#1}}
% <使用方法>
% \begin{Verbatim}[commandchars=\\\{\}]
% \vrbbf{echo foo}
% \vrbit{echo foo} 
% \end{Verbatim}
% ここで、[]のcommandcharsはコマンドに使用する文字列を指定している。
% ここの例だと、\,{,}である。これらの3つの文字の前に\をつけて並べている。
% 詳細は http://tex.stackexchange.com/questions/114942/how-do-i-get-selective-bold-in-verbatim を参照。

%%% カウンター付きのdescription %%%
\newcommand\litem[1]{\item{\bfseries #1\\}}
% <補足>
% 番号はenumerateで生成するので、enumerate環境を使う。
% 番号のスタイルはenumitemパッケージのlabelオプションで変更可能。



%%% Set hyperref environment
\hypersetup{%
setpagesize=false,%
bookmarksnumbered=true,%
bookmarksopen=true,%
colorlinks=true,%
linkcolor=blue,%
citecolor=red,%
}

%%% Set listings environment
\ifCpp
\lstset{
language = C++,%
numbers = left,%
numbersep = 8pt,%
numberstyle = \ttfamily\footnotesize,
breaklines = true,%
breakindent = 40pt,%
frame = lines,%
basicstyle = \ttfamily\footnotesize,% 基本スタイル
commentstyle=\color[rgb]{0,0,0.8}\ttfamily\footnotesize,% コメント
directivestyle=\color[rgb]{0.83,0.26,0.82}\ttfamily\footnotesize,% マクロ定義
stringstyle=\color[rgb]{0.76,0.22,0.16}\ttfamily\footnotesize,% 文字列
keywordstyle=\color[rgb]{0.05,0.49,0.07}\ttfamily\footnotesize,% void,struct等のキーワード
emph={for,if,else,do,while,switch,case,default,break,continue,return,this},% その他のキーワード
emphstyle=\color[rgb]{0.63,0.62,0.18}\ttfamily\footnotesize,% その他のキーワード
}
\endifCpp
\ifFtn
\lstdefinelanguage[03fdps]{Fortran}[03]{Fortran}{%
numbers = left,%
numbersep = 8pt,%
numberstyle = \ttfamily\footnotesize,
breaklines = true,%
breakindent = 40pt,%
frame = lines,%
escapeinside={||},%
mathescape=false,%
moredelim=*[directive]\#,%
directives={define,elif,else,endif,error,if,ifdef,ifndef,line,include,pragma,undef,warning},%
basicstyle = \ttfamily\footnotesize,% 基本スタイル
commentstyle=\color[rgb]{0,0,0.8}\ttfamily\footnotesize,% コメント
directivestyle=\color[rgb]{0.83,0.26,0.82}\ttfamily\footnotesize,% マクロ定義
stringstyle=\color[rgb]{0.76,0.22,0.16}\ttfamily\footnotesize,% 文字列
keywordstyle=\color[rgb]{0.05,0.49,0.07}\ttfamily\footnotesize,% void,struct等のキーワード
emph = {c_int,c_short,c_long,c_long_long,c_signed_char,c_size_t,c_int8_t,c_int16_t,c_int32_t,c_int64_t,c_int_least8_t,c_int_least16_t,c_int_least32_t,c_int_least64_t,c_int_fast8_t,c_int_fast16_t,c_int_fast32_t,c_int_fast64_t,c_intmax_t,c_intptr_t,c_float,c_double,c_long_double,c_float_double,c_double_complex,c_long_double_complex,c_bool,c_char,c_null_char,c_alert,c_backspace,c_form_feed,c_new_line,c_carriage_return,c_horizontal_tab,c_vertical_tab,c_null_ptr,c_null_funptr}, %
emphstyle=\color[rgb]{0.83,0.18,0.18}\ttfamily\footnotesize,% その他のキーワード
}[keywords,comments,strings,directives]%
\lstset{%
language = [03fdps]Fortran,%
}
\endifFtn
\ifC
\lstset{
language = C,%
numbers = left,%
numbersep = 8pt,%
numberstyle = \ttfamily\footnotesize,
breaklines = true,%
breakindent = 40pt,%
frame = lines,%
basicstyle = \ttfamily\footnotesize,% 基本スタイル
commentstyle=\color[rgb]{0,0,0.8}\ttfamily\footnotesize,% コメント
directivestyle=\color[rgb]{0.83,0.26,0.82}\ttfamily\footnotesize,% マクロ定義
stringstyle=\color[rgb]{0.76,0.22,0.16}\ttfamily\footnotesize,% 文字列
keywordstyle=\color[rgb]{0.05,0.49,0.07}\ttfamily\footnotesize,% void,struct等のキーワード
emph={for,if,else,do,while,switch,case,default,break,continue,return,this},% その他のキーワード
emphstyle=\color[rgb]{0.63,0.62,0.18}\ttfamily\footnotesize,% その他のキーワード
}
\endifC



\endinput
% End of file `fdps-tutorial.sty'.
