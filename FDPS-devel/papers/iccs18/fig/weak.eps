%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: gnuplot 4.6 patchlevel 3
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 360 252
%%HiResBoundingBox: 0 0 360 252
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F8_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 360 252 re
W
q
q
[0.1 0 0 0.1 0 0] cm
{} settransfer
5 w
3.8 M
/DeviceRGB {} CS
[0 0 0] SC
537.5 400 m
553 400 l
3374.5 400 m
3359 400 l
537.5 487 m
553 487 l
3374.5 487 m
3359 487 l
537.5 554.5 m
553 554.5 l
3374.5 554.5 m
3359 554.5 l
537.5 610 m
553 610 l
3374.5 610 m
3359 610 l
537.5 656.5 m
553 656.5 l
3374.5 656.5 m
3359 656.5 l
537.5 697 m
553 697 l
3374.5 697 m
3359 697 l
537.5 733 m
553 733 l
3374.5 733 m
3359 733 l
S
[5 10] 0 d
1.25 w
537.5 764.5 m
3374.5 764.5 l
S
[] 0 d
5 w
537.5 764.5 m
569 764.5 l
3374.5 764.5 m
3343 764.5 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.4605 71.0352] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(-2)
[3.33
0
5.56
0] Tj
Q
537.5 974.5 m
553 974.5 l
3374.5 974.5 m
3359 974.5 l
537.5 1097.5 m
553 1097.5 l
3374.5 1097.5 m
3359 1097.5 l
537.5 1184.5 m
553 1184.5 l
3374.5 1184.5 m
3359 1184.5 l
537.5 1252 m
553 1252 l
3374.5 1252 m
3359 1252 l
537.5 1307.5 m
553 1307.5 l
3374.5 1307.5 m
3359 1307.5 l
537.5 1354 m
553 1354 l
3374.5 1354 m
3359 1354 l
537.5 1394.5 m
553 1394.5 l
3374.5 1394.5 m
3359 1394.5 l
537.5 1430 m
553 1430 l
3374.5 1430 m
3359 1430 l
S
[5 10] 0 d
1.25 w
537.5 1462 m
3374.5 1462 l
S
[] 0 d
5 w
537.5 1462 m
569 1462 l
3374.5 1462 m
3343 1462 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.4605 140.785] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(-1)
[3.33
0
5.56
0] Tj
Q
537.5 1672 m
553 1672 l
3374.5 1672 m
3359 1672 l
537.5 1795 m
553 1795 l
3374.5 1795 m
3359 1795 l
537.5 1882 m
553 1882 l
3374.5 1882 m
3359 1882 l
537.5 1949.5 m
553 1949.5 l
3374.5 1949.5 m
3359 1949.5 l
537.5 2005 m
553 2005 l
3374.5 2005 m
3359 2005 l
537.5 2051.5 m
553 2051.5 l
3374.5 2051.5 m
3359 2051.5 l
537.5 2092 m
553 2092 l
3374.5 2092 m
3359 2092 l
537.5 2127.5 m
553 2127.5 l
3374.5 2127.5 m
3359 2127.5 l
S
[5 10] 0 d
1.25 w
537.5 2159.5 m
1843 2159.5 l
3299.5 2159.5 m
3374.5 2159.5 l
S
[] 0 d
5 w
537.5 2159.5 m
569 2159.5 l
3374.5 2159.5 m
3343 2159.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 26.7902 210.535] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
537.5 2369.5 m
553 2369.5 l
3374.5 2369.5 m
3359 2369.5 l
S
[5 10] 0 d
1.25 w
537.5 400 m
537.5 2369.5 l
S
[] 0 d
5 w
537.5 400 m
537.5 431.5 l
537.5 2369.5 m
537.5 2338 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 44.0203 22.0852] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(2)
[5.56
0] Tj
Q
908.5 400 m
908.5 415.5 l
908.5 2369.5 m
908.5 2354 l
1126 400 m
1126 415.5 l
1126 2369.5 m
1126 2354 l
1280 400 m
1280 415.5 l
1280 2369.5 m
1280 2354 l
1399.5 400 m
1399.5 415.5 l
1399.5 2369.5 m
1399.5 2354 l
1497 400 m
1497 415.5 l
1497 2369.5 m
1497 2354 l
1579.5 400 m
1579.5 415.5 l
1579.5 2369.5 m
1579.5 2354 l
1651 400 m
1651 415.5 l
1651 2369.5 m
1651 2354 l
1714 400 m
1714 415.5 l
1714 2369.5 m
1714 2354 l
S
[5 10] 0 d
1.25 w
1770.5 400 m
1770.5 2369.5 l
S
[] 0 d
5 w
1770.5 400 m
1770.5 431.5 l
1770.5 2369.5 m
1770.5 2338 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 167.32 22.0852] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(3)
[5.56
0] Tj
Q
2141.5 400 m
2141.5 415.5 l
2141.5 2369.5 m
2141.5 2354 l
2358.5 400 m
2358.5 415.5 l
2358.5 2369.5 m
2358.5 2354 l
2512.5 400 m
2512.5 415.5 l
2512.5 2369.5 m
2512.5 2354 l
2632 400 m
2632 415.5 l
2632 2369.5 m
2632 2354 l
2730 400 m
2730 415.5 l
2730 2369.5 m
2730 2354 l
2812.5 400 m
2812.5 415.5 l
2812.5 2369.5 m
2812.5 2354 l
2884 400 m
2884 415.5 l
2884 2369.5 m
2884 2354 l
2947 400 m
2947 415.5 l
2947 2369.5 m
2947 2354 l
S
[5 10] 0 d
1.25 w
3003.5 400 m
3003.5 1838 l
3003.5 2338 m
3003.5 2369.5 l
S
[] 0 d
5 w
3003.5 400 m
3003.5 431.5 l
3003.5 2369.5 m
3003.5 2338 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 290.62 22.0852] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(4)
[5.56
0] Tj
Q
3374.5 400 m
3374.5 415.5 l
3374.5 2369.5 m
3374.5 2354 l
S
537.5 400 2837 1969.5 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 14.1648 91.5688] Tm
0 0 Td
/F8_0 12.5 Tf
(wall clock time[s])
[9.025
0
6.95
0
2.775
0
2.775
0
3.475
0
6.25
0
2.775
0
6.95
0
6.25
0
6.25
0
3.475
0
3.475
0
2.775
0
10.4125
0
6.95
0
3.475
0
6.25
0
3.475
0] Tj
[1 0 0 1 154.956 4.58516] Tm
0 0 Td
/F8_0 12.5 Tf
(# of processes)
[6.95
0
3.475
0
6.95
0
3.475
0
3.475
0
6.95
0
4.1625
0
6.95
0
6.25
0
6.95
0
6.25
0
6.25
0
6.95
0
6.25
0] Tj
103.219 218.8 Td
(total)
[3.475
0
6.95
0
3.475
0
6.95
0
2.775
0] Tj
Q
10 w
2893 2275.5 m
3224.5 2275.5 l
669.5 1765.5 m
1041 1833 l
1412 1763.5 l
1783 1792.5 l
2154.5 1804 l
2525.5 1802.5 l
2896.5 1817 l
3267.5 1887.5 l
S
716.75 1765.5 m
716.75 1791.59 695.594 1812.75 669.5 1812.75 c
643.406 1812.75 622.25 1791.59 622.25 1765.5 c
622.25 1739.41 643.406 1718.25 669.5 1718.25 c
695.594 1718.25 716.75 1739.41 716.75 1765.5 c
S
1 J
669.5 1765.5 m
669.5 1765.5 l
S
0 J
1088.25 1833 m
1088.25 1859.09 1067.09 1880.25 1041 1880.25 c
1014.91 1880.25 993.75 1859.09 993.75 1833 c
993.75 1806.91 1014.91 1785.75 1041 1785.75 c
1067.09 1785.75 1088.25 1806.91 1088.25 1833 c
S
1 J
1041 1833 m
1041 1833 l
S
0 J
1459.25 1763.5 m
1459.25 1789.59 1438.09 1810.75 1412 1810.75 c
1385.91 1810.75 1364.75 1789.59 1364.75 1763.5 c
1364.75 1737.41 1385.91 1716.25 1412 1716.25 c
1438.09 1716.25 1459.25 1737.41 1459.25 1763.5 c
S
1 J
1412 1763.5 m
1412 1763.5 l
S
0 J
1830.25 1792.5 m
1830.25 1818.59 1809.09 1839.75 1783 1839.75 c
1756.91 1839.75 1735.75 1818.59 1735.75 1792.5 c
1735.75 1766.41 1756.91 1745.25 1783 1745.25 c
1809.09 1745.25 1830.25 1766.41 1830.25 1792.5 c
S
1 J
1783 1792.5 m
1783 1792.5 l
S
0 J
2201.75 1804 m
2201.75 1830.09 2180.59 1851.25 2154.5 1851.25 c
2128.41 1851.25 2107.25 1830.09 2107.25 1804 c
2107.25 1777.91 2128.41 1756.75 2154.5 1756.75 c
2180.59 1756.75 2201.75 1777.91 2201.75 1804 c
S
1 J
2154.5 1804 m
2154.5 1804 l
S
0 J
2572.75 1802.5 m
2572.75 1828.59 2551.59 1849.75 2525.5 1849.75 c
2499.41 1849.75 2478.25 1828.59 2478.25 1802.5 c
2478.25 1776.41 2499.41 1755.25 2525.5 1755.25 c
2551.59 1755.25 2572.75 1776.41 2572.75 1802.5 c
S
1 J
2525.5 1802.5 m
2525.5 1802.5 l
S
0 J
2943.75 1817 m
2943.75 1843.09 2922.59 1864.25 2896.5 1864.25 c
2870.41 1864.25 2849.25 1843.09 2849.25 1817 c
2849.25 1790.91 2870.41 1769.75 2896.5 1769.75 c
2922.59 1769.75 2943.75 1790.91 2943.75 1817 c
S
1 J
2896.5 1817 m
2896.5 1817 l
S
0 J
3314.75 1887.5 m
3314.75 1913.59 3293.59 1934.75 3267.5 1934.75 c
3241.41 1934.75 3220.25 1913.59 3220.25 1887.5 c
3220.25 1861.41 3241.41 1840.25 3267.5 1840.25 c
3293.59 1840.25 3314.75 1861.41 3314.75 1887.5 c
S
1 J
3267.5 1887.5 m
3267.5 1887.5 l
S
0 J
3105.75 2275.5 m
3105.75 2301.59 3084.59 2322.75 3058.5 2322.75 c
3032.41 2322.75 3011.25 2301.59 3011.25 2275.5 c
3011.25 2249.41 3032.41 2228.25 3058.5 2228.25 c
3084.59 2228.25 3105.75 2249.41 3105.75 2275.5 c
S
1 J
3058.5 2275.5 m
3058.5 2275.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 224.138 210.885] Tm
0 0 Td
/F8_0 12.5 Tf
(interaction)
[2.775
0
6.95
0
3.475
0
6.95
0
4.1625
0
6.95
0
6.25
0
3.475
0
2.775
0
6.95
0
6.95
0] Tj
Q
[20 10] 0 d
0 J
/DeviceRGB {} CS
[1 0 0] SC
2893 2150.5 m
3224.5 2150.5 l
669.5 1657.5 m
1041 1761.5 l
1412 1656 l
1783 1711.5 l
2154.5 1692.5 l
2525.5 1717 l
2896.5 1720.5 l
3267.5 1803 l
S
[] 0 d
622.25 1610.25 94.5 94.5 re
S
1 J
669.5 1657.5 m
669.5 1657.5 l
S
0 J
993.75 1714.25 94.5 94.5 re
S
1 J
1041 1761.5 m
1041 1761.5 l
S
0 J
1364.75 1608.75 94.5 94.5 re
S
1 J
1412 1656 m
1412 1656 l
S
0 J
1735.75 1664.25 94.5 94.5 re
S
1 J
1783 1711.5 m
1783 1711.5 l
S
0 J
2107.25 1645.25 94.5 94.5 re
S
1 J
2154.5 1692.5 m
2154.5 1692.5 l
S
0 J
2478.25 1669.75 94.5 94.5 re
S
1 J
2525.5 1717 m
2525.5 1717 l
S
0 J
2849.25 1673.25 94.5 94.5 re
S
1 J
2896.5 1720.5 m
2896.5 1720.5 l
S
0 J
3220.25 1755.75 94.5 94.5 re
S
1 J
3267.5 1803 m
3267.5 1803 l
S
0 J
3011.25 2103.25 94.5 94.5 re
S
1 J
3058.5 2150.5 m
3058.5 2150.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 197.75 198.385] Tm
0 0 Td
/F8_0 12.5 Tf
(communication)
[6.25
0
6.95
0
10.4125
0
10.4125
0
6.95
0
6.95
0
2.775
0
6.25
0
6.95
0
3.475
0
2.775
0
6.95
0
6.95
0] Tj
Q
[10 15] 0 d
0 J
/DeviceRGB {} CS
[0 1 0] SC
2893 2025.5 m
3224.5 2025.5 l
669.5 612.5 m
1041 667.5 l
1412 726.5 l
1783 753 l
2154.5 879 l
2525.5 857.5 l
2896.5 938 l
3267.5 976.5 l
S
[] 0 d
669.5 665.422 m
622.25 588.875 l
716.75 588.875 l
669.5 665.422 l
h
S
1 J
669.5 612.5 m
669.5 612.5 l
S
0 J
1041 720.422 m
993.75 643.875 l
1088.25 643.875 l
1041 720.422 l
h
S
1 J
1041 667.5 m
1041 667.5 l
S
0 J
1412 779.422 m
1364.75 702.875 l
1459.25 702.875 l
1412 779.422 l
h
S
1 J
1412 726.5 m
1412 726.5 l
S
0 J
1783 805.922 m
1735.75 729.375 l
1830.25 729.375 l
1783 805.922 l
h
S
1 J
1783 753 m
1783 753 l
S
0 J
2154.5 931.922 m
2107.25 855.375 l
2201.75 855.375 l
2154.5 931.922 l
h
S
1 J
2154.5 879 m
2154.5 879 l
S
0 J
2525.5 910.422 m
2478.25 833.875 l
2572.75 833.875 l
2525.5 910.422 l
h
S
1 J
2525.5 857.5 m
2525.5 857.5 l
S
0 J
2896.5 990.922 m
2849.25 914.375 l
2943.75 914.375 l
2896.5 990.922 l
h
S
1 J
2896.5 938 m
2896.5 938 l
S
0 J
3267.5 1029.42 m
3220.25 952.875 l
3314.75 952.875 l
3267.5 1029.42 l
h
S
1 J
3267.5 976.5 m
3267.5 976.5 l
S
0 J
3058.5 2078.42 m
3011.25 2001.88 l
3105.75 2001.88 l
3058.5 2078.42 l
h
S
1 J
3058.5 2025.5 m
3058.5 2025.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 247.063 185.885] Tm
0 0 Td
/F8_0 12.5 Tf
(others)
[6.95
0
3.475
0
6.95
0
6.95
0
4.1625
0
6.25
0] Tj
Q
[5 7.5] 0 d
0 J
/DeviceRGB {} CS
[0 0 1] SC
2893 1900.5 m
3224.5 1900.5 l
669.5 1376.5 m
1041 1329 l
1412 1364 l
1783 1307 l
2154.5 1396.5 l
2525.5 1318.5 l
2896.5 1355.5 l
3267.5 1390.5 l
S
[] 0 d
669.5 1329.25 m
669.5 1423.75 l
S
622.25 1376.5 m
716.75 1376.5 l
S
1041 1281.75 m
1041 1376.25 l
S
993.75 1329 m
1088.25 1329 l
S
1412 1316.75 m
1412 1411.25 l
S
1364.75 1364 m
1459.25 1364 l
S
1783 1259.75 m
1783 1354.25 l
S
1735.75 1307 m
1830.25 1307 l
S
2154.5 1349.25 m
2154.5 1443.75 l
S
2107.25 1396.5 m
2201.75 1396.5 l
S
2525.5 1271.25 m
2525.5 1365.75 l
S
2478.25 1318.5 m
2572.75 1318.5 l
S
2896.5 1308.25 m
2896.5 1402.75 l
S
2849.25 1355.5 m
2943.75 1355.5 l
S
3267.5 1343.25 m
3267.5 1437.75 l
S
3220.25 1390.5 m
3314.75 1390.5 l
S
3058.5 1853.25 m
3058.5 1947.75 l
S
3011.25 1900.5 m
3105.75 1900.5 l
S
5 w
/DeviceRGB {} CS
[0 0 0] SC
537.5 400 2837 1969.5 re
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
