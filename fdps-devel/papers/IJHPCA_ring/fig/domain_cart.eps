%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: matplotlib version 1.5.1, http://matplotlib.org/
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_12_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-183 -236 1287 928] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 7 dict def
CharProcs begin
/y {
592 0 30 -207 562 547 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[3.44785 0 0 3.44785 0 0] cm
9339.15 -1450.18 m
8585.05 -3306.41 7859.96 -4553.56 7163.88 -5133.63 c
6467.79 -5713.7 5539.68 -6003.74 4379.54 -6003.74 c
2291.28 -6003.74 l
2291.28 -3828.47 l
3828.47 -3828.47 l
4524.56 -3828.47 5075.62 -3654.45 5481.67 -3306.41 c
5887.72 -2958.36 6322.78 -2175.27 6815.84 -899.11 c
7279.89 261.032 l
870.107 15864.9 l
3625.44 15864.9 l
8585.05 3451.42 l
13544.7 15864.9 l
16300 15864.9 l
9339.15 -1450.18 l
f*
Q
Q
} def
/x {
592 0 29 0 559 547 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[3.42945 0 0 3.42945 0 0] cm
16008.4 15950.1 m
10234.9 8193.74 l
16300 0 l
13209.1 0 l
8572.81 6269.23 l
3936.49 0 l
845.617 0 l
7027.37 8339.53 l
1370.48 15950.1 l
4461.36 15950.1 l
8689.45 10264 l
12917.5 15950.1 l
16008.4 15950.1 l
f*
Q
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.47239 0 0 4.47239 0 0] cm
2414.81 16300 m
11067.9 16300 l
11067.9 14444.2 l
4427.16 14444.2 l
4427.16 10441.8 l
4740.19 10553.6 5075.58 10643.1 5388.61 10687.8 c
5701.65 10732.5 6037.04 10777.2 6350.07 10777.2 c
8161.18 10777.2 9592.18 10263 10665.4 9279.15 c
11738.7 8272.98 12275.3 6931.41 12275.3 5232.1 c
12275.3 3465.71 11716.3 2101.78 10620.7 1140.33 c
9525.1 178.875 7982.3 -290.672 6014.68 -290.672 c
5321.54 -290.672 4628.4 -223.594 3912.89 -134.156 c
3197.39 -22.3594 2481.89 134.156 1721.67 380.11 c
1721.67 2593.69 l
2370.1 2235.94 3040.88 1967.63 3756.38 1788.75 c
4449.52 1609.88 5187.38 1542.8 5969.96 1542.8 c
7222.09 1542.8 8228.26 1855.83 8966.12 2526.61 c
9681.62 3197.39 10061.7 4091.77 10061.7 5232.1 c
10061.7 6350.07 9681.62 7244.44 8966.12 7915.23 c
8228.26 8586.01 7222.09 8921.4 5969.96 8921.4 c
5388.61 8921.4 4784.91 8854.32 4203.57 8720.16 c
3622.22 8586.01 3018.52 8384.77 2414.81 8116.46 c
2414.81 16300 l
f*
Q
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.55215 0 0 4.55215 0 0] cm
6985.71 14586.5 m
5865.36 14586.5 5030.59 14037.3 4459.43 12938.9 c
3888.27 11840.6 3624.66 10193 3624.66 7996.23 c
3624.66 5799.46 3888.27 4151.89 4459.43 3053.5 c
5030.59 1955.12 5865.36 1405.93 6985.71 1405.93 c
8106.06 1405.93 8940.84 1955.12 9511.99 3053.5 c
10061.2 4151.89 10346.8 5799.46 10346.8 7996.23 c
10346.8 10193 10061.2 11840.6 9511.99 12938.9 c
8940.84 14037.3 8106.06 14586.5 6985.71 14586.5 c
6985.71 16300 m
8765.09 16300 10127.1 15575.1 11093.7 14169.1 c
12038.3 12741.2 12521.6 10676.3 12521.6 7996.23 c
12521.6 5294.2 12038.3 3229.25 11093.7 1823.32 c
10127.1 417.385 8765.09 -285.58 6985.71 -285.58 c
5184.37 -285.58 3800.4 417.385 2855.8 1823.32 c
1911.19 3229.25 1449.87 5294.2 1449.87 7996.23 c
1449.87 10676.3 1911.19 12741.2 2855.8 14169.1 c
3800.4 15575.1 5184.37 16300 6985.71 16300 c
f*
Q
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[1.28834 0 0 1.28834 0 0] cm
8305.24 0 7994.76 9624.76 re
f*
Q
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.47239 0 0 4.47239 0 0] cm
2772.57 1855.83 m
6372.43 1855.83 l
6372.43 14287.7 l
2459.53 13505.1 l
2459.53 15517.4 l
6350.07 16300 l
8563.65 16300 l
8563.65 1855.83 l
12163.5 1855.83 l
12163.5 0 l
2772.57 0 l
2772.57 1855.83 l
f*
Q
Q
} def
/minus {
838 0 106 272 732 355 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.4908 0 0 4.4908 0 0] cm
2360.38 6056.83 13939.62 1848.22 re
f*
Q
Q
} def
end
currentdict end
/T3_12_0 exch definefont pop
%%EndResource
/F12_0 /T3_12_0 1 1
[ /period/zero/one/five/x/y/minus/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 576 432 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 0 5760 4320 re
f
1224 432 3456 3456 re
f
q
1224 432 3456 3456 re
W
10 w
100000 M
/DeviceGray {} CS
[0] SC
2952 596.57 m
3366.63 596.57 3764.33 761.305 4057.51 1054.49 c
4350.7 1347.68 4515.43 1745.38 4515.43 2160 c
4515.43 2574.63 4350.7 2972.33 4057.51 3265.51 c
3764.33 3558.7 3366.63 3723.43 2952 3723.43 c
2537.38 3723.43 2139.68 3558.7 1846.49 3265.51 c
1553.3 2972.33 1388.57 2574.63 1388.57 2160 c
1388.57 1745.38 1553.3 1347.68 1846.49 1054.49 c
2139.68 761.305 2537.38 596.57 2952 596.57 c
2952 596.57 l
h
S
2952 432 m
3410.27 432 3849.84 614.074 4173.88 938.121 c
4497.93 1262.17 4680 1701.73 4680 2160 c
4680 2618.27 4497.93 3057.84 4173.88 3381.88 c
3849.84 3705.93 3410.27 3888 2952 3888 c
2493.73 3888 2054.17 3705.93 1730.12 3381.88 c
1406.07 3057.84 1224 2618.27 1224 2160 c
1224 1701.73 1406.07 1262.17 1730.12 938.121 c
2054.17 614.074 2493.73 432 2952 432 c
2952 432 l
h
S
2 J
1 j
2952 3690.11 m
2952 3888 l
S
2952 3690.11 m
2952 3888 l
S
2952 629.891 m
2952 432 l
S
2952 629.891 m
2952 432 l
S
3273.06 3690.11 m
3273.06 3888 l
S
2630.94 3690.11 m
2630.94 3888 l
S
3273.06 629.891 m
3273.06 432 l
S
2630.94 629.891 m
2630.94 432 l
S
2952 3888 m
3273.06 3888 l
S
2952 3888 m
2630.94 3888 l
S
2952 432 m
3273.06 432 l
S
2952 432 m
2630.94 432 l
S
2952 3857.22 m
3273.06 3857.22 l
S
2952 3857.22 m
2630.94 3857.22 l
S
2952 462.777 m
2630.94 462.777 l
S
2952 462.777 m
3273.06 462.777 l
S
2952 3836.52 m
3273.06 3836.52 l
S
2952 3836.52 m
2630.94 3836.52 l
S
2952 483.484 m
2630.94 483.484 l
S
2952 483.484 m
3273.06 483.484 l
S
2952 3815.81 m
3273.06 3815.81 l
S
2952 3815.81 m
2630.94 3815.81 l
S
2952 504.188 m
2630.94 504.188 l
S
2952 504.188 m
3273.06 504.188 l
S
2952 3795.11 m
3273.06 3795.11 l
S
2952 3795.11 m
2630.94 3795.11 l
S
2952 524.891 m
2630.94 524.891 l
S
2952 524.891 m
3273.06 524.891 l
S
2952 3774.4 m
3273.06 3774.4 l
S
2952 3774.4 m
2630.94 3774.4 l
S
2952 545.598 m
2630.94 545.598 l
S
2952 545.598 m
3273.06 545.598 l
S
2952 3753.7 m
3273.06 3753.7 l
S
2952 3753.7 m
2630.94 3753.7 l
S
2952 566.301 m
2630.94 566.301 l
S
2952 566.301 m
3273.06 566.301 l
S
2952 3732.99 m
3273.06 3732.99 l
S
2952 3732.99 m
2630.94 3732.99 l
S
2952 587.008 m
2630.94 587.008 l
S
2952 587.008 m
3273.06 587.008 l
S
2952 3690.11 m
3273.06 3690.11 l
S
2952 3690.11 m
2630.94 3690.11 l
S
2952 629.891 m
2630.94 629.891 l
S
2952 629.891 m
3273.06 629.891 l
S
3273.06 3590.99 m
3273.06 3857.91 l
S
2630.94 3590.99 m
2630.94 3857.91 l
S
3273.06 729.008 m
3273.06 462.086 l
S
2630.94 729.008 m
2630.94 462.086 l
S
3581.74 3590.99 m
3581.74 3857.91 l
S
2322.26 3590.99 m
2322.26 3857.91 l
S
3581.74 729.008 m
3581.74 462.086 l
S
2322.26 729.008 m
2322.26 462.086 l
S
3273.06 3857.91 m
3581.74 3857.91 l
S
2630.94 3857.91 m
2322.26 3857.91 l
S
3273.06 462.086 m
3581.74 462.086 l
S
2630.94 462.086 m
2322.26 462.086 l
S
3273.06 3801.87 m
3581.74 3801.87 l
S
2630.94 3801.87 m
2322.26 3801.87 l
S
2630.94 518.133 m
2322.26 518.133 l
S
3273.06 518.133 m
3581.74 518.133 l
S
3273.06 3775.84 m
3581.74 3775.84 l
S
2630.94 3775.84 m
2322.26 3775.84 l
S
2630.94 544.16 m
2322.26 544.16 l
S
3273.06 544.16 m
3581.74 544.16 l
S
3273.06 3754.12 m
3581.74 3754.12 l
S
2630.94 3754.12 m
2322.26 3754.12 l
S
2630.94 565.883 m
2322.26 565.883 l
S
3273.06 565.883 m
3581.74 565.883 l
S
3273.06 3732.59 m
3581.74 3732.59 l
S
2630.94 3732.59 m
2322.26 3732.59 l
S
2630.94 587.414 m
2322.26 587.414 l
S
3273.06 587.414 m
3581.74 587.414 l
S
3273.06 3711.05 m
3581.74 3711.05 l
S
2630.94 3711.05 m
2322.26 3711.05 l
S
2630.94 608.949 m
2322.26 608.949 l
S
3273.06 608.949 m
3581.74 608.949 l
S
3273.06 3689.51 m
3581.74 3689.51 l
S
2630.94 3689.51 m
2322.26 3689.51 l
S
2630.94 630.488 m
2322.26 630.488 l
S
3273.06 630.488 m
3581.74 630.488 l
S
3273.06 3662.89 m
3581.74 3662.89 l
S
2630.94 3662.89 m
2322.26 3662.89 l
S
2630.94 657.113 m
2322.26 657.113 l
S
3273.06 657.113 m
3581.74 657.113 l
S
3273.06 3590.99 m
3581.74 3590.99 l
S
2630.94 3590.99 m
2322.26 3590.99 l
S
2630.94 729.008 m
2322.26 729.008 l
S
3273.06 729.008 m
3581.74 729.008 l
S
3581.74 3428.33 m
3581.74 3769.16 l
S
2322.26 3428.33 m
2322.26 3769.16 l
S
3581.74 891.672 m
3581.74 550.836 l
S
2322.26 891.672 m
2322.26 550.836 l
S
3866.14 3428.33 m
3866.14 3769.16 l
S
2037.86 3428.33 m
2037.86 3769.16 l
S
3866.14 891.672 m
3866.14 550.836 l
S
2037.86 891.672 m
2037.86 550.836 l
S
3581.74 3769.16 m
3866.14 3769.16 l
S
2322.26 3769.16 m
2037.86 3769.16 l
S
3581.74 550.836 m
3866.14 550.836 l
S
2322.26 550.836 m
2037.86 550.836 l
S
3581.74 3693.23 m
3866.14 3693.23 l
S
2322.26 3693.23 m
2037.86 3693.23 l
S
2322.26 626.766 m
2037.86 626.766 l
S
3581.74 626.766 m
3866.14 626.766 l
S
3581.74 3659.73 m
3866.14 3659.73 l
S
2322.26 3659.73 m
2037.86 3659.73 l
S
2322.26 660.266 m
2037.86 660.266 l
S
3581.74 660.266 m
3866.14 660.266 l
S
3581.74 3633.27 m
3866.14 3633.27 l
S
2322.26 3633.27 m
2037.86 3633.27 l
S
2322.26 686.73 m
2037.86 686.73 l
S
3581.74 686.73 m
3866.14 686.73 l
S
3581.74 3609.76 m
3866.14 3609.76 l
S
2322.26 3609.76 m
2037.86 3609.76 l
S
2322.26 710.238 m
2037.86 710.238 l
S
3581.74 710.238 m
3866.14 710.238 l
S
3581.74 3586.3 m
3866.14 3586.3 l
S
2322.26 3586.3 m
2037.86 3586.3 l
S
2322.26 733.699 m
2037.86 733.699 l
S
3581.74 733.699 m
3866.14 733.699 l
S
3581.74 3559.13 m
3866.14 3559.13 l
S
2322.26 3559.13 m
2037.86 3559.13 l
S
2322.26 760.871 m
2037.86 760.871 l
S
3581.74 760.871 m
3866.14 760.871 l
S
3581.74 3522.44 m
3866.14 3522.44 l
S
2322.26 3522.44 m
2037.86 3522.44 l
S
2322.26 797.559 m
2037.86 797.559 l
S
3581.74 797.559 m
3866.14 797.559 l
S
3581.74 3428.33 m
3866.14 3428.33 l
S
2322.26 3428.33 m
2037.86 3428.33 l
S
2322.26 891.672 m
2037.86 891.672 l
S
3581.74 891.672 m
3866.14 891.672 l
S
3866.14 3204.63 m
3866.14 3626.4 l
S
2037.86 3204.63 m
2037.86 3626.4 l
S
3866.14 1115.37 m
3866.14 693.598 l
S
2037.86 1115.37 m
2037.86 693.598 l
S
4115.21 3204.63 m
4115.21 3626.4 l
S
1788.79 3204.63 m
1788.79 3626.4 l
S
4115.21 1115.37 m
4115.21 693.598 l
S
1788.79 1115.37 m
1788.79 693.598 l
S
3866.14 3626.4 m
4115.21 3626.4 l
S
2037.86 3626.4 m
1788.79 3626.4 l
S
3866.14 693.598 m
4115.21 693.598 l
S
2037.86 693.598 m
1788.79 693.598 l
S
3866.14 3532.07 m
4115.21 3532.07 l
S
2037.86 3532.07 m
1788.79 3532.07 l
S
2037.86 787.93 m
1788.79 787.93 l
S
3866.14 787.93 m
4115.21 787.93 l
S
3866.14 3491.13 m
4115.21 3491.13 l
S
2037.86 3491.13 m
1788.79 3491.13 l
S
2037.86 828.875 m
1788.79 828.875 l
S
3866.14 828.875 m
4115.21 828.875 l
S
3866.14 3458.98 m
4115.21 3458.98 l
S
2037.86 3458.98 m
1788.79 3458.98 l
S
2037.86 861.027 m
1788.79 861.027 l
S
3866.14 861.027 m
4115.21 861.027 l
S
3866.14 3431.29 m
4115.21 3431.29 l
S
2037.86 3431.29 m
1788.79 3431.29 l
S
2037.86 888.711 m
1788.79 888.711 l
S
3866.14 888.711 m
4115.21 888.711 l
S
3866.14 3402.82 m
4115.21 3402.82 l
S
2037.86 3402.82 m
1788.79 3402.82 l
S
2037.86 917.176 m
1788.79 917.176 l
S
3866.14 917.176 m
4115.21 917.176 l
S
3866.14 3368.31 m
4115.21 3368.31 l
S
2037.86 3368.31 m
1788.79 3368.31 l
S
2037.86 951.688 m
1788.79 951.688 l
S
3866.14 951.688 m
4115.21 951.688 l
S
3866.14 3322.09 m
4115.21 3322.09 l
S
2037.86 3322.09 m
1788.79 3322.09 l
S
2037.86 997.91 m
1788.79 997.91 l
S
3866.14 997.91 m
4115.21 997.91 l
S
3866.14 3204.63 m
4115.21 3204.63 l
S
2037.86 3204.63 m
1788.79 3204.63 l
S
2037.86 1115.37 m
1788.79 1115.37 l
S
3866.14 1115.37 m
4115.21 1115.37 l
S
4115.21 2918.57 m
4115.21 3437.86 l
S
1788.79 2918.57 m
1788.79 3437.86 l
S
4115.21 1401.43 m
4115.21 882.137 l
S
1788.79 1401.43 m
1788.79 882.137 l
S
4319.07 2918.57 m
4319.07 3437.86 l
S
1584.93 2918.57 m
1584.93 3437.86 l
S
4319.07 1401.43 m
4319.07 882.137 l
S
1584.93 1401.43 m
1584.93 882.137 l
S
4115.21 3437.86 m
4319.07 3437.86 l
S
1788.79 3437.86 m
1584.93 3437.86 l
S
4115.21 882.137 m
4319.07 882.137 l
S
1788.79 882.137 m
1584.93 882.137 l
S
4115.21 3324.35 m
4319.07 3324.35 l
S
1788.79 3324.35 m
1584.93 3324.35 l
S
1788.79 995.648 m
1584.93 995.648 l
S
4115.21 995.648 m
4319.07 995.648 l
S
4115.21 3275.27 m
4319.07 3275.27 l
S
1788.79 3275.27 m
1584.93 3275.27 l
S
1788.79 1044.73 m
1584.93 1044.73 l
S
4115.21 1044.73 m
4319.07 1044.73 l
S
4115.21 3236.77 m
4319.07 3236.77 l
S
1788.79 3236.77 m
1584.93 3236.77 l
S
1788.79 1083.23 m
1584.93 1083.23 l
S
4115.21 1083.23 m
4319.07 1083.23 l
S
4115.21 3203.4 m
4319.07 3203.4 l
S
1788.79 3203.4 m
1584.93 3203.4 l
S
1788.79 1116.6 m
1584.93 1116.6 l
S
4115.21 1116.6 m
4319.07 1116.6 l
S
4115.21 3167.88 m
4319.07 3167.88 l
S
1788.79 3167.88 m
1584.93 3167.88 l
S
1788.79 1152.12 m
1584.93 1152.12 l
S
4115.21 1152.12 m
4319.07 1152.12 l
S
4115.21 3124.75 m
4319.07 3124.75 l
S
1788.79 3124.75 m
1584.93 3124.75 l
S
1788.79 1195.25 m
1584.93 1195.25 l
S
4115.21 1195.25 m
4319.07 1195.25 l
S
4115.21 3066.86 m
4319.07 3066.86 l
S
1788.79 3066.86 m
1584.93 3066.86 l
S
1788.79 1253.14 m
1584.93 1253.14 l
S
4115.21 1253.14 m
4319.07 1253.14 l
S
4115.21 2918.57 m
4319.07 2918.57 l
S
1788.79 2918.57 m
1584.93 2918.57 l
S
1788.79 1401.43 m
1584.93 1401.43 l
S
4115.21 1401.43 m
4319.07 1401.43 l
S
4319.07 2539.98 m
4319.07 3216.93 l
S
1584.93 2539.98 m
1584.93 3216.93 l
S
4319.07 1780.02 m
4319.07 1103.07 l
S
1584.93 1780.02 m
1584.93 1103.07 l
S
4468.55 2539.98 m
4468.55 3216.93 l
S
1435.45 2539.98 m
1435.45 3216.93 l
S
4468.55 1780.02 m
4468.55 1103.07 l
S
1435.45 1780.02 m
1435.45 1103.07 l
S
4319.07 3216.93 m
4468.55 3216.93 l
S
1584.93 3216.93 m
1435.45 3216.93 l
S
4319.07 1103.07 m
4468.55 1103.07 l
S
1584.93 1103.07 m
1435.45 1103.07 l
S
4319.07 3081.33 m
4468.55 3081.33 l
S
1584.93 3081.33 m
1435.45 3081.33 l
S
1584.93 1238.67 m
1435.45 1238.67 l
S
4319.07 1238.67 m
4468.55 1238.67 l
S
4319.07 3022.43 m
4468.55 3022.43 l
S
1584.93 3022.43 m
1435.45 3022.43 l
S
1584.93 1297.57 m
1435.45 1297.57 l
S
4319.07 1297.57 m
4468.55 1297.57 l
S
4319.07 2975.79 m
4468.55 2975.79 l
S
1584.93 2975.79 m
1435.45 2975.79 l
S
1584.93 1344.21 m
1435.45 1344.21 l
S
4319.07 1344.21 m
4468.55 1344.21 l
S
4319.07 2931.32 m
4468.55 2931.32 l
S
1584.93 2931.32 m
1435.45 2931.32 l
S
1584.93 1388.68 m
1435.45 1388.68 l
S
4319.07 1388.68 m
4468.55 1388.68 l
S
4319.07 2884.77 m
4468.55 2884.77 l
S
1584.93 2884.77 m
1435.45 2884.77 l
S
1584.93 1435.23 m
1435.45 1435.23 l
S
4319.07 1435.23 m
4468.55 1435.23 l
S
4319.07 2827.89 m
4468.55 2827.89 l
S
1584.93 2827.89 m
1435.45 2827.89 l
S
1584.93 1492.11 m
1435.45 1492.11 l
S
4319.07 1492.11 m
4468.55 1492.11 l
S
4319.07 2750.09 m
4468.55 2750.09 l
S
1584.93 2750.09 m
1435.45 2750.09 l
S
1584.93 1569.91 m
1435.45 1569.91 l
S
4319.07 1569.91 m
4468.55 1569.91 l
S
4319.07 2542.21 m
4468.55 2542.21 l
S
1584.93 2542.21 m
1435.45 2542.21 l
S
1584.93 1777.79 m
1435.45 1777.79 l
S
4319.07 1777.79 m
4468.55 1777.79 l
S
4468.55 2160 m
4468.55 2988.29 l
S
1435.45 2160 m
1435.45 2988.29 l
S
4468.55 2160 m
4468.55 1331.71 l
S
1435.45 2160 m
1435.45 1331.71 l
S
4556.55 2160 m
4556.55 2988.29 l
S
1347.45 2160 m
1347.45 2988.29 l
S
4556.55 2160 m
4556.55 1331.71 l
S
1347.45 2160 m
1347.45 1331.71 l
S
4468.55 2988.29 m
4556.55 2988.29 l
S
1435.45 2988.29 m
1347.45 2988.29 l
S
4468.55 1331.71 m
4556.55 1331.71 l
S
1435.45 1331.71 m
1347.45 1331.71 l
S
4468.55 2825.47 m
4556.55 2825.47 l
S
1435.45 2825.47 m
1347.45 2825.47 l
S
1435.45 1494.53 m
1347.45 1494.53 l
S
4468.55 1494.53 m
4556.55 1494.53 l
S
4468.55 2748.59 m
4556.55 2748.59 l
S
1435.45 2748.59 m
1347.45 2748.59 l
S
1435.45 1571.41 m
1347.45 1571.41 l
S
4468.55 1571.41 m
4556.55 1571.41 l
S
4468.55 2673.05 m
4556.55 2673.05 l
S
1435.45 2673.05 m
1347.45 2673.05 l
S
1435.45 1646.95 m
1347.45 1646.95 l
S
4468.55 1646.95 m
4556.55 1646.95 l
S
4468.55 2597.51 m
4556.55 2597.51 l
S
1435.45 2597.51 m
1347.45 2597.51 l
S
1435.45 1722.49 m
1347.45 1722.49 l
S
4468.55 1722.49 m
4556.55 1722.49 l
S
4468.55 2521.49 m
4556.55 2521.49 l
S
1435.45 2521.49 m
1347.45 2521.49 l
S
1435.45 1798.51 m
1347.45 1798.51 l
S
4468.55 1798.51 m
4556.55 1798.51 l
S
4468.55 2431.29 m
4556.55 2431.29 l
S
1435.45 2431.29 m
1347.45 2431.29 l
S
1435.45 1888.71 m
1347.45 1888.71 l
S
4468.55 1888.71 m
4556.55 1888.71 l
S
4468.55 2312.44 m
4556.55 2312.44 l
S
1435.45 2312.44 m
1347.45 2312.44 l
S
1435.45 2007.56 m
1347.45 2007.56 l
S
4468.55 2007.56 m
4556.55 2007.56 l
S
4468.55 2160 m
4556.55 2160 l
S
1435.45 2160 m
1347.45 2160 l
S
1435.45 2160 m
1347.45 2160 l
S
4468.55 2160 m
4556.55 2160 l
S
4556.55 2160 m
4556.55 2801.41 l
S
1347.45 2160 m
1347.45 2801.41 l
S
4556.55 2160 m
4556.55 1518.59 l
S
1347.45 2160 m
1347.45 1518.59 l
S
4680 2160 m
4680 2801.41 l
S
1224 2160 m
1224 2801.41 l
S
4680 2160 m
4680 1518.59 l
S
1224 2160 m
1224 1518.59 l
S
4556.55 2801.41 m
4680 2801.41 l
S
1347.45 2801.41 m
1224 2801.41 l
S
4556.55 1518.59 m
4680 1518.59 l
S
1347.45 1518.59 m
1224 1518.59 l
S
4556.55 2607.77 m
4680 2607.77 l
S
1347.45 2607.77 m
1224 2607.77 l
S
1347.45 1712.23 m
1224 1712.23 l
S
4556.55 1712.23 m
4680 1712.23 l
S
4556.55 2519.64 m
4680 2519.64 l
S
1347.45 2519.64 m
1224 2519.64 l
S
1347.45 1800.36 m
1224 1800.36 l
S
4556.55 1800.36 m
4680 1800.36 l
S
4556.55 2447.95 m
4680 2447.95 l
S
1347.45 2447.95 m
1224 2447.95 l
S
1347.45 1872.05 m
1224 1872.05 l
S
4556.55 1872.05 m
4680 1872.05 l
S
4556.55 2384.2 m
4680 2384.2 l
S
1347.45 2384.2 m
1224 2384.2 l
S
1347.45 1935.8 m
1224 1935.8 l
S
4556.55 1935.8 m
4680 1935.8 l
S
4556.55 2325.04 m
4680 2325.04 l
S
1347.45 2325.04 m
1224 2325.04 l
S
1347.45 1994.96 m
1224 1994.96 l
S
4556.55 1994.96 m
4680 1994.96 l
S
4556.55 2268.68 m
4680 2268.68 l
S
1347.45 2268.68 m
1224 2268.68 l
S
1347.45 2051.32 m
1224 2051.32 l
S
4556.55 2051.32 m
4680 2051.32 l
S
4556.55 2213.96 m
4680 2213.96 l
S
1347.45 2213.96 m
1224 2213.96 l
S
1347.45 2106.04 m
1224 2106.04 l
S
4556.55 2106.04 m
4680 2106.04 l
S
4556.55 2160 m
4680 2160 l
S
1347.45 2160 m
1224 2160 l
S
1347.45 2160 m
1224 2160 l
S
4556.55 2160 m
4680 2160 l
S
Q
10 w
100000 M
2 J
/DeviceGray {} CS
[0] SC
1224 432 m
4680 432 l
S
1224 3888 m
4680 3888 l
S
4680 432 m
4680 3888 l
S
1224 432 m
1224 3888 l
S
/DeviceGray {} cs
[0] sc
1306.29 432 m
1306.29 472 l
f
5 w
0 J
1 j
1306.29 432 m
1306.29 472 l
S
1306.29 3888 m
1306.29 3848 l
f
1306.29 3888 m
1306.29 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 116.05 30.075] Tm
0 0 Td
/F12_0 12 Tf
(\006)
[10.056
0] Tj
0.108846 TJm
(\002)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
Q
2129.14 432 m
2129.14 472 l
f
2129.14 432 m
2129.14 472 l
S
2129.14 3888 m
2129.14 3848 l
f
2129.14 3888 m
2129.14 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 198.336 30.075] Tm
0 0 Td
/F12_0 12 Tf
(\006)
[10.056
0] Tj
0.109863 TJm
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\003)
[7.632
0] Tj
Q
2952 432 m
2952 472 l
f
2952 432 m
2952 472 l
S
2952 3888 m
2952 3848 l
f
2952 3888 m
2952 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 285.653 30.075] Tm
0 0 Td
/F12_0 12 Tf
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\001)
[7.632
0] Tj
Q
3774.86 432 m
3774.86 472 l
f
3774.86 432 m
3774.86 472 l
S
3774.86 3888 m
3774.86 3848 l
f
3774.86 3888 m
3774.86 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 367.939 30.075] Tm
0 0 Td
/F12_0 12 Tf
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\003)
[7.632
0] Tj
Q
4597.71 432 m
4597.71 472 l
f
4597.71 432 m
4597.71 472 l
S
4597.71 3888 m
4597.71 3848 l
f
4597.71 3888 m
4597.71 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 450.225 30.075] Tm
0 0 Td
/F12_0 12 Tf
(\002)
[7.632
0] Tj
-0.231934 TJm
(\000)
[3.816
0] Tj
0.130208 TJm
(\001)
[7.632
0] Tj
-158.579 -16.625 Td
(\004)
[7.104
0] Tj
Q
1224 514.285 m
1264 514.285 l
f
1224 514.285 m
1264 514.285 l
S
4680 514.285 m
4640 514.285 l
f
4680 514.285 m
4640 514.285 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 89.2438 48.116] Tm
0 0 Td
/F12_0 12 Tf
(\006)
[10.056
0] Tj
0.109355 TJm
(\002)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
Q
1224 1337.14 m
1264 1337.14 l
f
1224 1337.14 m
1264 1337.14 l
S
4680 1337.14 m
4640 1337.14 l
f
4680 1337.14 m
4640 1337.14 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 89.2438 130.402] Tm
0 0 Td
/F12_0 12 Tf
(\006)
[10.056
0] Tj
0.109355 TJm
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\003)
[7.632
0] Tj
Q
1224 2160 m
1264 2160 l
f
1224 2160 m
1264 2160 l
S
4680 2160 m
4640 2160 l
f
4680 2160 m
4640 2160 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 212.688] Tm
0 0 Td
/F12_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
Q
1224 2982.86 m
1264 2982.86 l
f
1224 2982.86 m
1264 2982.86 l
S
4680 2982.86 m
4640 2982.86 l
f
4680 2982.86 m
4640 2982.86 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 294.973] Tm
0 0 Td
/F12_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\003)
[7.632
0] Tj
Q
1224 3805.71 m
1264 3805.71 l
f
1224 3805.71 m
1264 3805.71 l
S
4680 3805.71 m
4640 3805.71 l
f
4680 3805.71 m
4640 3805.71 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 377.259] Tm
0 0 Td
/F12_0 12 Tf
(\002)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
[0 1 -1 0 81.7438 212.445] Tm
0 0 Td
/F12_0 12 Tf
(\005)
[7.104
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_12_0
%%EOF
