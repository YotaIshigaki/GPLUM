%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.5 (http://poppler.freedesktop.org)
%%Creator: matplotlib version 1.5.3, http://matplotlib.org/
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_10_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-183 -236 1287 928] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 9 dict def
CharProcs begin
/y {
592 0 30 -207 562 547 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[3.44785 0 0 3.44785 0 0] cm
9339.15 -1450.18 m
8585.05 -3306.41 7859.96 -4553.56 7163.88 -5133.63 c
6467.79 -5713.7 5539.68 -6003.74 4379.54 -6003.74 c
2291.28 -6003.74 l
2291.28 -3828.47 l
3828.47 -3828.47 l
4524.56 -3828.47 5075.62 -3654.45 5481.67 -3306.41 c
5887.72 -2958.36 6322.78 -2175.27 6815.84 -899.11 c
7279.89 261.032 l
870.107 15864.9 l
3625.44 15864.9 l
8585.05 3451.42 l
13544.7 15864.9 l
16300 15864.9 l
9339.15 -1450.18 l
f*
Q
Q
} def
/x {
592 0 29 0 559 547 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[3.42945 0 0 3.42945 0 0] cm
16008.4 15950.1 m
10234.9 8193.76 l
16300 0 l
13209.1 0 l
8572.84 6269.23 l
3936.49 0 l
845.617 0 l
7027.37 8339.59 l
1370.48 15950.1 l
4461.36 15950.1 l
8689.47 10264 l
12917.5 15950.1 l
16008.4 15950.1 l
f*
Q
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.47239 0 0 4.47239 0 0] cm
2772.57 1855.83 m
6372.43 1855.83 l
6372.43 14287.7 l
2459.53 13505.1 l
2459.53 15517.4 l
6350.07 16300 l
8563.65 16300 l
8563.65 1855.83 l
12163.5 1855.83 l
12163.5 0 l
2772.57 0 l
2772.57 1855.83 l
f*
Q
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.55215 0 0 4.55215 0 0] cm
6985.71 7600.81 m
5953.23 7600.81 5140.43 7315.23 4547.3 6766.04 c
3954.18 6216.85 3668.6 5469.95 3668.6 4503.37 c
3668.6 3536.79 3954.18 2767.92 4547.3 2218.73 c
5140.43 1669.54 5953.23 1405.93 6985.71 1405.93 c
7996.23 1405.93 8809.03 1669.54 9402.17 2240.7 c
9995.31 2789.89 10302.8 3536.79 10302.8 4503.37 c
10302.8 5469.95 9995.31 6216.85 9424.13 6766.04 c
8831 7315.23 8018.19 7600.81 6985.71 7600.81 c
4810.92 8523.46 m
3888.27 8743.13 3163.34 9182.49 2636.12 9819.54 c
2108.89 10456.6 1867.25 11225.5 1867.25 12148.1 c
1867.25 13422.2 2306.6 14432.7 3229.25 15179.6 c
4129.92 15926.5 5382.08 16300 6985.71 16300 c
8567.39 16300 9819.54 15926.5 10742.2 15179.6 c
11642.9 14432.7 12104.2 13422.2 12104.2 12148.1 c
12104.2 11225.5 11840.6 10456.6 11313.3 9819.54 c
10786.1 9182.49 10083.2 8743.13 9160.51 8523.46 c
10193 8281.81 11005.8 7798.52 11598.9 7095.55 c
12170.1 6392.59 12477.6 5513.88 12477.6 4503.37 c
12477.6 2943.67 11994.3 1757.41 11049.7 944.609 c
10083.2 109.838 8743.13 -285.58 6985.71 -285.58 c
5206.33 -285.58 3844.34 109.838 2899.73 944.609 c
1955.12 1757.41 1493.8 2943.67 1493.8 4503.37 c
1493.8 5513.88 1779.38 6392.59 2372.51 7095.55 c
2943.67 7798.52 3756.47 8281.81 4810.92 8523.46 c
4020.08 11950.4 m
4020.08 11115.6 4261.72 10456.6 4788.95 9995.31 c
5316.17 9533.96 6041.1 9314.29 6985.71 9314.29 c
7908.36 9314.29 8633.29 9533.96 9160.51 9995.31 c
9687.74 10456.6 9951.39 11115.6 9951.39 11950.4 c
9951.39 12785.2 9687.74 13422.2 9160.51 13883.6 c
8633.29 14344.9 7908.36 14586.5 6985.71 14586.5 c
6041.1 14586.5 5316.17 14344.9 4788.95 13883.6 c
4261.72 13422.2 4020.08 12785.2 4020.08 11950.4 c
f*
Q
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.55215 0 0 4.55215 0 0] cm
7249.33 8874.93 m
6282.75 8874.93 5513.88 8523.46 4942.72 7864.42 c
4371.56 7205.39 4085.98 6282.75 4085.98 5140.43 c
4085.98 3976.15 4371.56 3053.5 4942.72 2394.47 c
5513.88 1735.44 6282.75 1405.93 7249.33 1405.93 c
8215.9 1405.93 8984.77 1735.44 9555.93 2394.47 c
10127.1 3053.5 10412.7 3976.15 10412.7 5140.43 c
10412.7 6282.75 10127.1 7205.39 9555.93 7864.42 c
8984.77 8523.46 8215.9 8874.93 7249.33 8874.93 c
11555 15662.9 m
11555 13685.8 l
11005.8 13949.5 10456.6 14147.2 9907.42 14279 c
9336.25 14410.8 8787.06 14476.7 8259.84 14476.7 c
6809.97 14476.7 5711.59 13993.4 4964.69 13026.8 c
4217.79 12060.2 3778.44 10588.4 3690.57 8655.26 c
4107.95 9270.35 4635.18 9753.64 5272.24 10083.2 c
5909.3 10412.7 6612.26 10588.4 7381.13 10588.4 c
8984.77 10588.4 10258.9 10083.2 11181.5 9116.59 c
12104.2 8150 12587.5 6809.97 12587.5 5140.43 c
12587.5 3492.86 12082.2 2174.8 11115.6 1186.25 c
10149.1 197.709 8852.96 -285.58 7249.33 -285.58 c
5404.04 -285.58 3976.15 417.385 3009.57 1823.32 c
2021.02 3229.25 1537.74 5294.2 1537.74 7996.23 c
1537.74 10522.5 2130.86 12543.5 3339.08 14037.3 c
4525.34 15531.1 6150.94 16300 8171.97 16300 c
8699.2 16300 9248.39 16234.1 9819.54 16146.2 c
10368.7 16036.4 10939.9 15882.6 11555 15662.9 c
f*
Q
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.47239 0 0 4.47239 0 0] cm
8451.85 14377.1 m
2884.36 5679.29 l
8451.85 5679.29 l
8451.85 14377.1 l
7870.51 16300 m
10643.1 16300 l
10643.1 5679.29 l
12968.5 5679.29 l
12968.5 3845.82 l
10643.1 3845.82 l
10643.1 0 l
8451.85 0 l
8451.85 3845.82 l
1095.61 3845.82 l
1095.61 5969.96 l
7870.51 16300 l
f*
Q
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.55215 0 0 4.55215 0 0] cm
4217.79 1823.32 m
11774.7 1823.32 l
11774.7 0 l
1603.64 0 l
1603.64 1823.32 l
2416.44 2658.09 3536.79 3800.4 4964.69 5250.27 c
6370.62 6678.17 7271.29 7600.81 7644.74 8018.19 c
8347.71 8787.06 8831 9446.09 9094.61 9995.31 c
9358.24 10522.5 9512 11071.7 9512 11598.9 c
9512 12433.7 9204.45 13136.7 8611.32 13663.9 c
8018.19 14191.1 7249.33 14476.7 6282.75 14476.7 c
5601.75 14476.7 4876.82 14344.9 4129.92 14125.2 c
3383.02 13883.6 2570.22 13532.1 1713.48 13048.8 c
1713.48 15245.6 l
2592.18 15597 3404.99 15860.6 4151.89 16036.4 c
4898.79 16212.1 5601.75 16300 6238.81 16300 c
7886.39 16300 9204.45 15882.6 10193 15047.8 c
11181.5 14213.1 11686.8 13114.7 11686.8 11730.7 c
11686.8 11071.7 11555 10434.6 11313.3 9863.51 c
11071.7 9270.35 10632.3 8567.39 9973.35 7776.55 c
9797.58 7556.87 9226.41 6963.75 8259.84 5975.2 c
7293.26 4986.66 5953.23 3602.7 4217.79 1823.32 c
f*
Q
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[1.28834 0 0 1.28834 0 0] cm
8305.24 0 m
16300 0 l
16300 9624.76 l
8305.24 9624.76 l
f*
Q
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.55215 0 0 4.55215 0 0] cm
6985.71 14586.5 m
5865.36 14586.5 5030.59 14037.3 4459.43 12938.9 c
3888.27 11840.6 3624.66 10193 3624.66 7996.23 c
3624.66 5799.46 3888.27 4151.89 4459.43 3053.5 c
5030.59 1955.12 5865.36 1405.93 6985.71 1405.93 c
8106.06 1405.93 8940.84 1955.12 9512 3053.5 c
10061.2 4151.89 10346.8 5799.46 10346.8 7996.23 c
10346.8 10193 10061.2 11840.6 9512 12938.9 c
8940.84 14037.3 8106.06 14586.5 6985.71 14586.5 c
6985.71 16300 m
8765.09 16300 10127.1 15575.1 11093.7 14169.1 c
12038.3 12741.2 12521.6 10676.3 12521.6 7996.23 c
12521.6 5294.2 12038.3 3229.25 11093.7 1823.32 c
10127.1 417.385 8765.09 -285.58 6985.71 -285.58 c
5184.37 -285.58 3800.4 417.385 2855.8 1823.32 c
1911.19 3229.25 1449.87 5294.2 1449.87 7996.23 c
1449.87 10676.3 1911.19 12741.2 2855.8 14169.1 c
3800.4 15575.1 5184.37 16300 6985.71 16300 c
f*
Q
Q
} def
end
currentdict end
/T3_10_0 exch definefont pop
%%EndResource
/F10_0 /T3_10_0 1 1
[ /period/zero/one/two/four/six/eight/x
  /y/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 576 432 re
W
q
q
[0.1 0 0 0.1 0 0] cm
{} settransfer
/DeviceGray {} cs
[1] sc
0 0 5760 4320 re
f
1224 432 3456 3456 re
f
q
1224 432 3456 3456 re
W
10 w
100000 M
/DeviceGray {} CS
[0] SC
1224 -2694.86 m
2053.25 -2694.86 2848.65 -2365.39 3435.02 -1779.02 c
4021.39 -1192.65 4350.86 -397.254 4350.86 432 c
4350.86 1261.25 4021.39 2056.65 3435.02 2643.02 c
2848.65 3229.39 2053.25 3558.86 1224 3558.86 c
394.746 3558.86 -400.652 3229.39 -987.023 2643.02 c
-1573.39 2056.65 -1902.86 1261.25 -1902.86 432 c
-1902.86 -397.254 -1573.39 -1192.65 -987.023 -1779.02 c
-400.652 -2365.39 394.746 -2694.86 1224 -2694.86 c
h
S
1224 -2777.14 m
2075.07 -2777.14 2891.41 -2439.01 3493.21 -1837.21 c
4095.01 -1235.41 4433.14 -419.074 4433.14 432 c
4433.14 1283.07 4095.01 2099.41 3493.21 2701.21 c
2891.41 3303.01 2075.07 3641.14 1224 3641.14 c
372.926 3641.14 -443.406 3303.01 -1045.21 2701.21 c
-1647.01 2099.41 -1985.14 1283.07 -1985.14 432 c
-1985.14 -419.074 -1647.01 -1235.41 -1045.21 -1837.21 c
-443.406 -2439.01 372.926 -2777.14 1224 -2777.14 c
h
S
1224 -2859.43 m
2096.9 -2859.43 2934.16 -2512.62 3551.39 -1895.39 c
4168.62 -1278.16 4515.43 -440.898 4515.43 432 c
4515.43 1304.9 4168.62 2142.16 3551.39 2759.39 c
2934.16 3376.63 2096.9 3723.43 1224 3723.43 c
351.102 3723.43 -486.16 3376.63 -1103.39 2759.39 c
-1720.62 2142.16 -2067.43 1304.9 -2067.43 432 c
-2067.43 -440.898 -1720.62 -1278.16 -1103.39 -1895.39 c
-486.16 -2512.62 351.102 -2859.43 1224 -2859.43 c
h
S
1224 -2941.71 m
2118.72 -2941.71 2976.91 -2586.24 3609.58 -1953.57 c
4242.24 -1320.91 4597.71 -462.719 4597.71 432 c
4597.71 1326.72 4242.24 2184.91 3609.58 2817.58 c
2976.91 3450.24 2118.72 3805.71 1224 3805.71 c
329.281 3805.71 -528.914 3450.24 -1161.57 2817.58 c
-1794.24 2184.91 -2149.71 1326.72 -2149.71 432 c
-2149.71 -462.719 -1794.24 -1320.91 -1161.57 -1953.57 c
-528.914 -2586.24 329.281 -2941.71 1224 -2941.71 c
h
S
1224 -3024 m
2140.54 -3024 3019.67 -2659.86 3667.76 -2011.76 c
4315.86 -1363.67 4680 -484.543 4680 432 c
4680 1348.54 4315.86 2227.67 3667.76 2875.76 c
3019.67 3523.86 2140.54 3888 1224 3888 c
307.457 3888 -571.668 3523.86 -1219.76 2875.76 c
-1867.86 2227.67 -2232 1348.54 -2232 432 c
-2232 -484.543 -1867.86 -1363.67 -1219.76 -2011.76 c
-571.668 -2659.86 307.457 -3024 1224 -3024 c
h
S
1224 -2694.86 m
2053.25 -2694.86 2848.65 -2365.39 3435.02 -1779.02 c
4021.39 -1192.65 4350.86 -397.254 4350.86 432 c
4350.86 1261.25 4021.39 2056.65 3435.02 2643.02 c
2848.65 3229.39 2053.25 3558.86 1224 3558.86 c
394.746 3558.86 -400.652 3229.39 -987.023 2643.02 c
-1573.39 2056.65 -1902.86 1261.25 -1902.86 432 c
-1902.86 -397.254 -1573.39 -1192.65 -987.023 -1779.02 c
-400.652 -2365.39 394.746 -2694.86 1224 -2694.86 c
h
S
1224 -3024 m
2140.54 -3024 3019.67 -2659.86 3667.76 -2011.76 c
4315.86 -1363.67 4680 -484.543 4680 432 c
4680 1348.54 4315.86 2227.67 3667.76 2875.76 c
3019.67 3523.86 2140.54 3888 1224 3888 c
307.457 3888 -571.668 3523.86 -1219.76 2875.76 c
-1867.86 2227.67 -2232 1348.54 -2232 432 c
-2232 -484.543 -1867.86 -1363.67 -1219.76 -2011.76 c
-571.668 -2659.86 307.457 -3024 1224 -3024 c
h
S
2 J
1 j
4350.86 432 m
4680 432 l
S
4347.09 585.426 m
4675.84 601.578 l
S
4335.8 738.484 m
4663.36 770.746 l
S
4317.02 890.805 m
4642.59 939.102 l
S
4290.78 1042.02 m
4613.59 1106.23 l
S
4257.15 1191.77 m
4576.43 1271.74 l
S
4216.21 1339.68 m
4531.19 1435.22 l
S
4168.07 1485.41 m
4477.98 1596.29 l
S
4112.84 1628.6 m
4416.93 1754.55 l
S
4050.64 1768.9 m
4348.19 1909.63 l
S
3981.64 1905.99 m
4271.92 2061.15 l
S
3906 2039.53 m
4188.31 2208.74 l
S
3823.89 2169.19 m
4097.56 2352.05 l
S
3735.52 2294.67 m
3999.89 2490.74 l
S
3641.09 2415.66 m
3895.52 2624.46 l
S
3540.85 2531.87 m
3784.73 2752.91 l
S
3435.02 2643.02 m
3667.76 2875.76 l
S
3323.87 2748.85 m
3544.91 2992.73 l
S
3207.66 2849.09 m
3416.46 3103.52 l
S
3086.67 2943.52 m
3282.74 3207.89 l
S
2961.19 3031.89 m
3144.05 3305.56 l
S
2831.53 3114 m
3000.74 3396.31 l
S
2697.99 3189.64 m
2853.15 3479.92 l
S
2560.9 3258.64 m
2701.63 3556.19 l
S
2420.6 3320.84 m
2546.55 3624.93 l
S
2277.41 3376.07 m
2388.29 3685.98 l
S
2131.68 3424.21 m
2227.22 3739.19 l
S
1983.77 3465.15 m
2063.74 3784.43 l
S
1834.02 3498.78 m
1898.23 3821.59 l
S
1682.8 3525.02 m
1731.1 3850.59 l
S
1530.48 3543.8 m
1562.75 3871.36 l
S
1377.43 3555.09 m
1393.58 3883.84 l
S
1224 3558.86 m
1224 3888 l
S
Q
10 w
100000 M
2 J
/DeviceGray {} CS
[0] SC
1224 432 m
4680 432 l
S
4680 432 m
4680 3888 l
S
1224 3888 m
4680 3888 l
S
1224 432 m
1224 3888 l
S
/DeviceGray {} cs
[0] sc
1224 432 m
1224 472 l
f
5 w
0 J
1 j
1224 432 m
1224 472 l
S
1224 3888 m
1224 3848 l
f
1224 3888 m
1224 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 112.853 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
Q
1882.29 432 m
1882.29 472 l
f
1882.29 432 m
1882.29 472 l
S
1882.29 3888 m
1882.29 3848 l
f
1882.29 3888 m
1882.29 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 178.682 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\003)
[7.632
0] Tj
Q
2540.57 432 m
2540.57 472 l
f
2540.57 432 m
2540.57 472 l
S
2540.57 3888 m
2540.57 3848 l
f
2540.57 3888 m
2540.57 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 244.51 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\004)
[7.632
0] Tj
Q
3198.86 432 m
3198.86 472 l
f
3198.86 432 m
3198.86 472 l
S
3198.86 3888 m
3198.86 3848 l
f
3198.86 3888 m
3198.86 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 310.339 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\005)
[7.632
0] Tj
Q
3857.14 432 m
3857.14 472 l
f
3857.14 432 m
3857.14 472 l
S
3857.14 3888 m
3857.14 3848 l
f
3857.14 3888 m
3857.14 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 376.168 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.229899 TJm
(\000)
[3.816
0] Tj
0.128174 TJm
(\006)
[7.632
0] Tj
Q
4515.43 432 m
4515.43 472 l
f
4515.43 432 m
4515.43 472 l
S
4515.43 3888 m
4515.43 3848 l
f
4515.43 3888 m
4515.43 3848 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 441.996 30.075] Tm
0 0 Td
/F10_0 12 Tf
(\002)
[7.632
0] Tj
-0.231934 TJm
(\000)
[3.816
0] Tj
0.130208 TJm
(\001)
[7.632
0] Tj
-150.351 -16.625 Td
(\007)
[7.104
0] Tj
Q
1224 432 m
1264 432 l
f
1224 432 m
1264 432 l
S
4680 432 m
4640 432 l
f
4680 432 m
4640 432 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 39.8875] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
Q
1224 1090.29 m
1264 1090.29 l
f
1224 1090.29 m
1264 1090.29 l
S
4680 1090.29 m
4640 1090.29 l
f
4680 1090.29 m
4640 1090.29 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 105.716] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\003)
[7.632
0] Tj
Q
1224 1748.57 m
1264 1748.57 l
f
1224 1748.57 m
1264 1748.57 l
S
4680 1748.57 m
4640 1748.57 l
f
4680 1748.57 m
4640 1748.57 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 171.545] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\004)
[7.632
0] Tj
Q
1224 2406.86 m
1264 2406.86 l
f
1224 2406.86 m
1264 2406.86 l
S
4680 2406.86 m
4640 2406.86 l
f
4680 2406.86 m
4640 2406.86 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 237.373] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\005)
[7.632
0] Tj
Q
1224 3065.14 m
1264 3065.14 l
f
1224 3065.14 m
1264 3065.14 l
S
4680 3065.14 m
4640 3065.14 l
f
4680 3065.14 m
4640 3065.14 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 303.202] Tm
0 0 Td
/F10_0 12 Tf
(\001)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\006)
[7.632
0] Tj
Q
1224 3723.43 m
1264 3723.43 l
f
1224 3723.43 m
1264 3723.43 l
S
4680 3723.43 m
4640 3723.43 l
f
4680 3723.43 m
4640 3723.43 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 99.3063 369.03] Tm
0 0 Td
/F10_0 12 Tf
(\002)
[7.632
0] Tj
-0.230916 TJm
(\000)
[3.816
0] Tj
0.129191 TJm
(\001)
[7.632
0] Tj
[0 1 -1 0 91.8063 212.445] Tm
0 0 Td
/F10_0 12 Tf
(\010)
[7.104
0] Tj
Q
{} settransfer
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_10_0
%%EOF
