INC = -I ../../../src
#CC = g++
CC = mpiicpc
#CC = icpc
#CC = mpicxx
CFLAGS = -O3 -funroll-loops -march=native -static-intel #-std=c++11
CFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -fopenmp
CFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL
#CFLAGS += -Wall -Wformat=2 -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Wfloat-equal -Wpointer-arith
CFLAGS += -DPARTICLE_SIMULATOR_ALL_64BIT_PRECISION
CFLAGS += -DFAST_COMM_FOR_2ND_EXCHANGE

CFLAGS += -DENABLE_KNL

#use_phantom_grape_x86 = yes

ifeq ($(use_phantom_grape_x86),yes)
INC += -I ../../../src/phantom_grape_x86/G5/newton/libpg5/
CFLAGS  += -DENABLE_PHANTOM_GRAPE_X86
LIBS   = -L ../../../src/phantom_grape_x86/G5/newton/libpg5/ -lpg5
endif

#CPPOBJS = $(patsubst %.cpp, %.o, $(wildcard *.cpp))
CPPOBJS = main.cpp
CPPHDRS = $(wildcard *.h)
PROGRAM = SPzyH.out

.PHONY:	clean all

all:	$(CPPOBJS) $(CPPHDRS)
	#@source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64
	#@source /opt/intel/impi/2017.0.098/bin64/mpivars.sh
	@echo "Linking object files..."
	@$(CC) $(CFLAGS) $(WARNINGS) $(CPPOBJS) -o $(PROGRAM) $(LIBS) $(INC)
	@echo "Link Success! [$(PROGRAM)]"

%.o:	%.cpp $(CPPHDRS)
	@echo "Building $< ..."
	@$(CC) -c $< $(CFLAGS) $(WARNINGS) $(INC)
	@echo "[$< OK]"

clean:
	-rm *.out *.o *.log


