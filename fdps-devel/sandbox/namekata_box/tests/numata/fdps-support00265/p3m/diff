diff --git a/sample/fortran/p3m/f_main.F90 b/sample/fortran/p3m/f_main.F90
index 89862f7..b68f255 100644
--- a/sample/fortran/p3m/f_main.F90
+++ b/sample/fortran/p3m/f_main.F90
@@ -77,7 +77,7 @@ subroutine f_main()
          if (is_tree_initialized .eqv. .false.) then
             nptcl_loc = fdps_ctrl%get_nptcl_loc(psys_num)
             call fdps_ctrl%create_tree(tree_num, &
-                                       "Long,nbody_pp_results,nbody_ep,nbody_ep,MonopoleWithCutoff")
+                                       "Long,nbody_pp_results,nbody_epi,nbody_epj,MonopoleWithCutoff")
             call fdps_ctrl%init_tree(tree_num,3*nptcl_loc,theta, &
                                      n_leaf_limit,n_group_limit)
             is_tree_initialized = .true.
diff --git a/sample/fortran/p3m/user_defined.F90 b/sample/fortran/p3m/user_defined.F90
index 972f0b9..3c5caa7 100644
--- a/sample/fortran/p3m/user_defined.F90
+++ b/sample/fortran/p3m/user_defined.F90
@@ -30,13 +30,20 @@ module user_defined_types
    end type nbody_fp
 
    !**** Essential Particle Class
-   type, public, bind(c) :: nbody_ep !$fdps EPI,EPJ
+   type, public, bind(c) :: nbody_epi !$fdps EPI
       !$fdps copyFromFP nbody_fp (id,id) (m,m) (rc,rc) (x,x)
       integer(kind=c_long_long) :: id
       real(kind=c_double) :: m !$fdps charge
       real(kind=c_double) :: rc !$fdps rsearch
       type(fdps_f64vec) :: x !$fdps position
-   end type nbody_ep
+   end type nbody_epi
+
+   type, public, bind(c) :: nbody_epj !$fdps EPJ
+      !$fdps copyFromFP nbody_fp (id,id) (m,m) (x,x)
+      integer(kind=c_long_long) :: id
+      real(kind=c_double) :: m !$fdps charge
+      type(fdps_f64vec) :: x !$fdps position
+   end type nbody_epj
 
    !**** Crystal Parameters class
    type, public, bind(c) :: crystal_parameters
@@ -120,8 +127,8 @@ module user_defined_types
    !-------------------------------------------------------------------- 
    subroutine calc_force_ep_ep(ep_i,n_ip,ep_j,n_jp,f) bind(c)
       integer(c_int), intent(in), value :: n_ip,n_jp
-      type(nbody_ep), dimension(n_ip), intent(in) :: ep_i
-      type(nbody_ep), dimension(n_jp), intent(in) :: ep_j
+      type(nbody_epi), dimension(n_ip), intent(in) :: ep_i
+      type(nbody_epj), dimension(n_jp), intent(in) :: ep_j
       type(nbody_pp_results), dimension(n_ip), intent(inout) :: f
       !* Local variables
       integer(c_int) :: i,j
@@ -154,7 +161,7 @@ module user_defined_types
    !-------------------------------------------------------------------- 
    subroutine calc_force_ep_sp(ep_i,n_ip,ep_j,n_jp,f) bind(c)
       integer(c_int), intent(in), value :: n_ip,n_jp
-      type(nbody_ep), dimension(n_ip), intent(in) :: ep_i
+      type(nbody_epi), dimension(n_ip), intent(in) :: ep_i
       type(fdps_spj_monopole_cutoff), dimension(n_jp), intent(in) :: ep_j
       type(nbody_pp_results), dimension(n_ip), intent(inout) :: f
       !* Local variables
