# (i) FDPS setting
FDPS_ROOT = ../../../../../
INC = -I$(FDPS_ROOT)/src
LIBS =

# (ii) ASRCH setting
ASRCH_ROOT=./asrch/src
#INC += -I$(ASRCH_ROOT)
#LIBS += -L$(ASRCH_ROOT) -lASRCH
ASRCH_OBJS=$(ASRCH_ROOT)/cooling.o \
	   $(ASRCH_ROOT)/info.o \
           $(ASRCH_ROOT)/log.o \
           $(ASRCH_ROOT)/RunParameters.o \
           $(ASRCH_ROOT)/Utilities.o \
           $(ASRCH_ROOT)/preprocess/ASRCHCoolingHeating.o

# (iii) Compiler, compile options, etc.
#CXX=time -p FCCpx
CXX=time -p mpiFCCpx 
#CXXFLAGS = -std=c++11 -O0 -g -NRtrap -Nquickdbg=subchk -Nquickdbg=heapchk -Nquickdbg=inf_detail
CXXFLAGS = -std=c++11 -Kfast -Ksimd=2 -Krestp=all
CXXFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -Kopenmp
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL

# Simulation control macros 
CXXFLAGS += -DENABLE_VARIABLE_SMOOTHING_LENGTH
#CXXFLAGS += -DUSE_ENTROPY
CXXFLAGS += -DUSE_BALSARA_SWITCH
#CXXFLAGS += -DUSE_PRESCR_OF_THOMAS_COUCHMAN_1992
CXXFLAGS += -DISOTHERMAL_EOS

CXXFLAGS += -DREAD_DATA_WITH_BYTESWAP

CXXFLAGS += -DASRCH_OLD_API

# (ii) Phantom-GRAPE library
#use_phantom_grape_x86 = yes
ifeq ($(use_phantom_grape_x86),yes)
PG_ROOT = $(FDPS_ROOT)/src/phantom_grape_x86/G5/newton/libpg5
INC += -I$(PG_ROOT)
CXXFLAGS += -DENABLE_PHANTOM_GRAPE_X86
LIBS = -L$(PG_ROOT) -lpg5
PG_BUILD = cd $(PG_ROOT) && $(MAKE) distclean libpg5.a
PG_CLEAN = cd $(PG_ROOT) && $(MAKE) distclean
else
PG_BUILD =
PG_CLEAN = 
endif

# (iii) Job submission variables
QSUB = pjsub
JOB_FILE_NAME = job.hokusai-gw.sh
WORKDIR = ./work-hokusai-gw/

# (iv) Executable
CPPOBJS = $(patsubst %.cpp, %.o, $(wildcard *.cpp))
CPPHDRS = $(wildcard *.h) $(wildcard *.hpp)
PROGRAM = nbodysph.out

.PHONY:	clean all

all: $(CPPOBJS) $(CPPHDRS)
	$(PG_BUILD)
	#$(CXX) $(CXXFLAGS) $(CPPOBJS) -o $(PROGRAM) $(LIBS) $(INC)
	#$(CXX) $(CXXFLAGS) $(CPPOBJS) $(ASRCH_ROOT)/libASRCH.a -o $(PROGRAM) $(LIBS) $(INC)
	$(CXX) $(CXXFLAGS) $(CPPOBJS) $(ASRCH_OBJS) -o $(PROGRAM) $(LIBS) $(INC)
	mkdir -p $(WORKDIR)
	mv $(PROGRAM) $(WORKDIR)
	cp $(JOB_FILE_NAME) $(WORKDIR)
	cp -fR ./magi_data $(WORKDIR)/
	cd $(WORKDIR); $(QSUB) $(JOB_FILE_NAME) 

%.o: %.cpp $(CPPHDRS)
	$(CXX) -c $< $(CXXFLAGS) $(INC)

clean:
	rm -f $(CPPOBJS)

distclean: clean
	$(PG_CLEAN)
	rm -f $(PROGRAM)
	rm -rf result

