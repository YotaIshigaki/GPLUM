# (i) Compiler and compile options
CC = time -p mpifccpx
#CC = time -p mpiFCCpx
CXX = time -p mpiFCCpx
CFLAGS = -std=c++11 -Kfast -Ksimd=2 -Krestp=all
#CFLAGS = -std=c++11 -O0
CFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -Kopenmp
CFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL
CXXFLAGS = $(CFLAGS)
CXXFLAGS += -std=c++11

FDPS_ROOT=../../../
PM_ROOT=$(FDPS_ROOT)/src/particle_mesh

CXXFLAGS += -I$(FDPS_ROOT)/src
CXXFLAGS += -I$(PM_ROOT)

FFTW_ROOT = /gwfefs/opt/s64fx/fftw/3.3.4/
FFTW_LIBS = -L$(FFTW_ROOT)/lib -lfftw3f_mpi -lfftw3f

CXXFLAGS += -I$(FFTW_ROOT)/include
CFLAGS += -I$(FFTW_ROOT)/include
CFLAGS += -I$(FDPS_ROOT)/src
CLIBS +=  -L$(PM_ROOT) -lpm $(FFTW_LIBS)
#CLIBS += $(FFTW_LIBS)


EXTERNAL_LIB = $(PM_ROOT)/param_fdps.h $(PM_ROOT)/libpm.a

# Phantom-GRAPE setting
use_phantom_grape_x86 = no

ifeq ($(use_phantom_grape_x86),yes)

PHANTOM_ROOT = $(FDPS_ROOT)/src/phantom_grape_x86/G5/table/
CXXFLAGS += -DENABLE_PHANTOM_GRAPE_X86
CXXFLAGS += -I$(PHANTOM_ROOT)

PG_CC = $(CXX)
PG_CFLAGS = -DSFT_FOR_PP -DSFT_FOR_PM
PG_CFLAGS += -O3
#PG_CFLAGS += -ffast-math -funroll-loops -Wall

gravity_kernel_avx2.o:$(PHANTOM_ROOT)/gravity_kernel_avx2.c
	$(PG_CC) $(PG_CFLAGS) -c -o $@ $^
phantom_g5.o:$(PHANTOM_ROOT)/phantom_g5.c
	$(PG_CC) $(PG_CFLAGS) -c -o $@ $^
pg5_table.o:$(PHANTOM_ROOT)/pg5_table.c
	$(PG_CC) $(PG_CFLAGS) -c -o $@ $^
libpg5.a:gravity_kernel_avx2.o phantom_g5.o pg5_table.o
	ar -r $@ $^
	ranlib $@
CLIBS   += -L./ -lpg5
EXTERNAL_LIB += libpg5.a

endif

# (iv) Job submission variables
QSUB = pjsub
JOB_FILE_NAME = job.hokusai-gw.sh
#WORKDIR = ./work-hokusai-gw/ewald
WORKDIR = ./work-hokusai-gw/full_run

#---------------------------------
all: treepm

TREEPM_OBJ = treepm.o make_directory.o timing.o $(EXTERNAL_OBJ)
TREEPM_DEP := $(TREEPM_OBJ) treepm.hpp cosmology.hpp run_param.hpp

.c.o:
	$(CC) $(CFLAGS) -c $*.c -o $*.o

.cpp.o:
	$(CXX) $(CXXFLAGS) -c $*.cpp -o $*.o

treepm.o: treepm.hpp cosmology.hpp run_param.hpp

$(PM_ROOT)/libpm.a: $(PM_ROOT)/param_fdps.h
	cd $(PM_ROOT) && $(MAKE) -f Makefile.hokusai-gw allclean libpm.a


treepm:  $(TREEPM_DEP) $(EXTERNAL_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $(TREEPM_OBJ) $(CLIBS) -lm
	mkdir -p $(WORKDIR)
	mv $@ $(WORKDIR)
	cp $(JOB_FILE_NAME) $(WORKDIR)
	cd $(WORKDIR); $(QSUB) $(JOB_FILE_NAME) 

clean: 
	-rm -rf treepm *.o *.a
	cd $(PM_ROOT) && $(MAKE) allclean

distclean: clean
	-rm -rf *~
