TODO
MPICommunicator/testMPICommunicator.cppの初期化をtestframe.cppに移植する

MPICommunicatorの実装により、大幅な変更が生じた。
コンパイルはできるが、初期化をしていないのでほとんど何もしない。



CalcPreparator
  CalculationUnit、Communicationを持つ。
  constructcalculationunits()
    CalculationUnitに必要なParticleArray、OperationSelectorをセットする。
    Communicationに通信パターンをセットする。
    並列化で決まる情報はParallelCoordinatorから受け取る。
  start(long tmax)
    計算開始
    CalculationUnitのstartTimeIntegrationを呼び出す。

CalculationUnit
  分割されたParticleArrayを持つ。
  Integrator、CalcForce、Communicationを持つ。
  ParticleArray、CommunicationはCalcPreparatorから渡される。
  startTimeIntegration(long tmax)
    計算開始
    Integratorのtime_integrationsを呼び出す。

Integrator
  time_integrations(ParticleArray& particlearray, CalcForce& calcforce, 
		    const long tmax, OperationSelector operations,
	            Communication& communication)
    時間積分する。
    必要な情報はすべてCalculationUnitから受け取る。

CalcForce
  力の計算をする。
  ghost(他のノードから来る粒子)を持つ。Communicationで送受信する。
  短距離(EwaldAndLJEInteractions,CoulombAndLJInteractions)
  長距離(DummyLongRangeInteraction)
  化学結合(ChemicalBond)
  calcForce(ParticleArray& particlearray, double& energy,
	    OperationSelector operations, Communication& communication)
    力の計算
    CommunicationのexchangeParticleArrayでghostの座標等を送受信をする。
    OperationSelectorで選択された力を計算する。
    CommunicationのexchangeForcesで力を送受信する。
    各種力、ポテンシャルの和

Communication
  通信
  shortrange_targets   短距離計算の通信相手
  longrange_targets    長距離計算の通信相手
  chemicalbond_targets 化学結合計算の通信相手
  all_targets          全通信相手
  sendparticlearray、sendforcearray 送信バッファ
  通信相手はコンストラクタで設定される。
  moveParticle(ParticleArray& particlearray,
	       ParticleArray& ghost,
	       PairRangeList& i_lj, 
	       PairRangeList& i_coulomb,
	       ChemicalBondList& bondlist) 
    移動する粒子の通信。
  send*()
    各種力計算の計算ノードへ自粒子を送信する。
  receive*()
    各種力計算に必要な粒子を他ノードから受信する。
  send*Force()
    ghostへの各種力を送信する。
  receive*Force()
    他ノードで計算した各種力を受信する。
  exchangeParticleArray()
    移動粒子の送受信
    計算に必要な粒子の送受信
  exchangeForces()
    計算した力の送受信

LongRangeInteraction<class CHARGEASSIGN, class POISSONSOLVER>
  長距離計算テンプレート(抽象クラスとどちらがよいか？)
  CHARGEASSIGN チャージアサイン、POISSONSOLVER ポアソンソルバーを持つ。
  calcForce()
    チャージアサイン           CHARGEASSIGNのassign
    グリッドでの力計算         POISSONSOLVERのsolvePoisson
    バックインターポレーション  CHARGEASSIGNのbackinterpolate

PoissonSolver
  グリッドポアソンソルバー
  solvePoisson()
    ポアソンソルバーの呼び出し

DummyPoissonSolver
  試験用ダミー

ChargeAssign
  チャージアサイン
  assign()
    チャージアサイン
  backinterpolate()
    バックインターポレーション

DummyChargeAssign
  試験用ダミー

ChemicalBond
  結合力計算
  calcBond(),calcAngle(),calcTorsion(),calcImproper() 各種結合力
  calcForce()
    全結合力の計算

ChemicalBondList(structで十分？)
  担当している各種結合の一覧



ShortRangeInteraction/ShortRangeInteraction.h

namespace ShortRange
  短距離計算の共通情報
  LJMixparameterArray ljmixparameters LJの係数
  double alpha Ewald法のalpha
  
setljmixparameters(LJMixparameterArray& ljmt)
  ljmixparametersをセットする。

Coulomb,EwaldReal,LJ,LJCoulomb,LJEwaldReal 各種力のinine関数を持つ
(クラスでなく関数で十分？)
  Interaction(double r2, TPI pi, TPJ pj,
  	      double& energy, double& dp)
    1ペアの計算
    TPI,TPJ 粒子情報(全データか計算に必要なデータのみ、ParticleInfo参照)


ShortRangeInteraction<class T, 
                      typename TPI = ParticleParameter1, 
                      typename TPJ=ParticleParameter1>
  短距離計算のループ
  class T のInteractionをinlineで埋め込む。

typedef *<> ShortRangeInteractionテンプレートのエイリアス


LJParameter/LJParameter.h LJParameter/LJParameter.cpp
  CppMD0から転用
  追加機能
  LJMixParameter 計算時に必要なr^nの係数のみの構造体
  LJMixName LJMixParameterの原子ペアの名前
    LJMixParameter とは別に保持
      計算時には名前は不要
      stringはコピーが重い
  LJMixparameterArray LJMixParameterの配列
  LJParameterCoulomb   LJ+Coulombに必要な情報
  LJParameterEwaldReal LJ+rEwaldRealに必要な情報

LJParameter/LJAmber.h
  AmberのLJパラメータ
  
LJAmberParameter  
  AmberのLJ 名前、R、イプシロン
  
LJAmber
  LJAmberParameter *ljamberparameters  原子毎のLJAmberParameterの配列
  LJMixParameter getLJMixParameter(long i, long j)
    指定された原子種ペアからLJMixParameterを計算する
  convertLJMixparameterArray(LJMixparameterArray& ljma)
    原子毎のLJAmberParameterの配列から、全原子種ペアのLJMixParameterを計算してljmaに格納する。
  convertLJMixName(LJMixName& ljmn)
    原子毎のLJAmberParameterの配列から、全原子種ペアの名前を生成してljmnに格納する。
  LJParameter getLJParameter(int i)
    指定された原子種のパラメーターをLJParameter形式で返す。
  LJParameter getmixParameter(int i=0, int j=0)
    指定された原子種ペアのパラメーターをLJParameter形式で返す。

LJParameter/LJAmber94.h
LJAmberParameter ljamber94parameters
  http://ambermd.org/amber10.ffparms.tar.bz2のparm/parm94.datの
  LJパラメーター
LJAmber94
  Amber parm94 のデータを持ったLJAmber。


Common/Common.h Common/SpaceVector.h
  CppMD0からの転用。

Common/ParticleInfo.h
粒子情報の構造体
Particle
  全情報
ParticleArray
  Particleの配列。構造体の配列。
Particleset
  粒子セットの範囲を示す構造体
ParticleParameter1
  短距離計算に必要なデータ(座標、力、電荷、原子種)だけの構造体
  ghostとか力計算前の通信でデータサイズを最小限にしたいときに使う。
ParticleParameters1
  ParticleParameter1の配列。構造体の配列。
StructOfParticleDataArray
  配列の構造体形式の粒子配列

ForceArray
  力のみの配列
  力の種類毎の結果を保持するとか、送受信するとかに使う。



Communication/Communication.h
class Communicationをここに移す。
SendParticleReceiveForce
  送受信時に粒子セットの詰め替えをするためのクラス
  先送り

SetPairList/SetPairList.h
  粒子セットの処理
  先送り

OMPParallel/OMPParallel.h
  OpenMPによる並列化の実験
  実用性は低い

looptest*
  j粒子ループ長の実験
