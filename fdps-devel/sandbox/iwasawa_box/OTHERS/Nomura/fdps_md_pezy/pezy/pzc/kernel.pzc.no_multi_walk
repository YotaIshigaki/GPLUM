#include<pzc_builtin.h>
#include"../class_device.hpp"

void pzc_ForceKernel(const EpiDev * epi,
		     const int n_ip,
                     const EpjDev * epj,
		     const int n_jp,
                     ForceDev * force){
  const int cut_off2 = 4.5*4.5;
  const int tid = get_tid();
  const int pid = get_pid();
  const int index_offset = pid * get_maxtid() + tid;
  const int index_base = get_maxtid()*get_maxpid();

  for(int index=index_offset; index<n_ip; index += index_base){
    double ax, ay, az, pot;
    ax = ay = az = pot = 0.0f;
    const EpiDev ip = epi[index];
    for(int j=0; j<n_jp; j++){
      const EpjDev jp = epj[j];
      const float dx = ip.px - jp.px;
      const float dy = ip.py - jp.py;
      const float dz = ip.pz - jp.pz;
      const float r2 = (dx*dx + dy*dy) + dz*dz;

      if(r2 <= cut_off2 && r2!=0.0){
	const float r2_inv = 1.f / r2;
	const float r6_inv  = r2_inv*r2_inv*r2_inv;
	const float r12_inv = r6_inv*r6_inv;
	const float dphi = (48.f*r12_inv - 24.f*r6_inv)*r2_inv;
	ax  += dphi * dx;
	ay  += dphi * dy;
	az  += dphi * dz;
	pot += 4.0f*(r12_inv - r6_inv);
      }
    }
    force[index].ax = ax;
    force[index].ay = ay;
    force[index].az = az;
    force[index].pot = pot;
  }
  flush();
}
