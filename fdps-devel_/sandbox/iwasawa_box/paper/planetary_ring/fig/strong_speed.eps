%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: gnuplot 4.6 patchlevel 3
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 360 252
%%HiResBoundingBox: 0 0 360 252
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font OISENI+Helvetica
%!FontType1-1.0: OISENI+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /OISENI+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 859 732] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 35 /numbersign put
dup 37 /percent put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 80 /P put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74E937CCBD27A32CB3BCF5FE6
C45D34D885BFB86FF350A90A5782FFBE48234DAA06C5D150B2EC09D77404EC3D
B43160154612D64E10BACD89A617F4DEA98A315408AD9D54BEFC25C4416E4A72
6632CCC5C9AF2C341A0AE136E29843D68B1251F5FA845C13AC8B7DE251BFFEA8
A8EDD813DCEE74501D2E689B7E24D26500F2D6EE48A8B8000CB839582669CE55
2E2326EC60875EE39AF01AD6CB90C35E45C7457BC5D919B95DB4B1B3472B21FD
A75430228EC36A61BBB8AF7EAB4DD67FCC036BA1955402F76770E0A7B7F63560
1218B6DB62BA5978D4D7D8C01C52A2DB893086B93EA78D598ED80FC544F91C09
43DB0AB3B6D9F75193968B2249EA7CFFFCDC5B286A58CA4528280296E0FC00F9
86D04385DA697C399F11185AE779701A975182EC511D234784CDC4E7E31AED88
53D8FA23D84B1B0336070CD207A96065BF120B07D736D746F90FD2CC7F958627
5EDC4DE6FE2A7B99B67BF4D3CB0853ED2C447AD1B1330F5A17E8A68AAD643476
C97B2FBC8316AFCD7F025965845B480D38E171CC239375C1B13DD539320AA31A
5D07BC2DD7565B2ABDBCA01C89EFAC95EEAD73E36B2CF2FFA5648BA09958CEBF
93FCA1D19E75A76268A943B3AE769AB0C3EE07740AF10FCA6C7C4F20F021317A
60E78F0F57CDF85AA15770CC4E75FA0643E55AEE60FCD4796933D87CA8E76FCC
8C25FA5FF8108FF3CA83AC0ABD48AC6241D1F35FF3DB912C33A3D61289093F57
B66FC9E405D5720ECF1140D4816862846B98AB2658CE71E74F458E5532065257
588CC5706A120D89D63629FFADC756AF9B208A8E1A5F0E03ED67365E35BA17ED
9534B6692DDC29830400F26570F54A45D67AF50C8CC4791F5DC2E8A89FF00D18
DC6B0CA9B5B2F839E4699030997202DD29EE1ED39B3B72280D8BA2A932801ACD
70249C5111F62514E85D132C2067CC9241AD98EAEC6E72A442505C63CB08C587
3AC13EC718D37152179F0F19880F607937BEA87F22ED343C3D6DC5BD2D71776F
806C499E19BA115D9B8F9B927C7558BFD1A28E26FAC63B2DFDAEE92E0873DDAA
64521296F0B74EFEC5FF8FAFFC93CB6B25A0090C89D927B591CE6051772BEF5E
2FDE5D8A43DB530927C9DE352881A94254B46D62FCD9A719D9F2D7E1C020268E
672DE639222310903334809BA7C8F9846C8B8BC31F14BF84221004E7D0F6EBF2
6C1D4A7E39ACE8D135C8D4514FC4B06FE647C4FC82118E17DD41CAFB14B51E94
F3AFBDC28D3CE1A929801F76BB8EAF6844B9A9D171132E2CE3731326D41DFE5B
9DB71F8F23DFB297B18502761A7467F55A2CB27652872BD406B2D3F0A2D5FE71
9B61095A2CABFFF9543EFD360A60918D702BF9F5C373A446E541B6594CBB570A
FB6861439E2BD219F85CC29780081F23A14C13F36F82F33DC36E0BCFD3401884
43F589389E6BCC1A456B750C7237BCEAC00B61C851E82F44FE4DFBA22C607545
3C4086889D3011A53454B93AD3EC25D118F0AB073A93704410D8B23E580F3BE6
CD18C7D019DD7A30F928A00165DD2E396070A9CFC90736E19E63EAD75F5850B0
550D86D607B03C329B61EE8C40FD329580CA687D22F7317E12870BA0596D5DB6
A3CFA336EBAB352E0B2F4874E8466E848FDAB586316FD3C5A6070641E447FE5E
21555453C3F38C755BA29FEA3B4650A9E7AB72EDC7C59AA19FE3E972FE5E486B
68741B3692470F92B42C42FC1B627FA502AFB4711CA985378D96203DB4585B1D
90A53C860C71B2E84932CE40904F3E28DEEE389334961ABE2D34B30216305774
798FA4B70C04933A3737E1EE2749DECFF7F55831E4D99217188B005D18E74799
281E494644952CC00D1465C749EAB7B45F57DF6D2AEFA8644A3E100967FAE5B3
B6617D044A8217D4D13A325BB971198767629F4AA2F0D55949D61B2763AB6736
4AD21835E05561E1D290F14C4D44ECB31156AE36583F0FA9B815413D0DA99213
871480976D4D13B87959549DA74379514A466B099C18A3BEA88A9544EF5548AE
A8A9A5A3E17247A9E719C5EC212B9465763B5776E251769756DEB232A6BB9F48
4DD6261A2310D6C6D7E94377E3BA840347B138BAD8A29A495A2D4F0086481E1B
DB43ED0AFF6FD3C5D3F7A503B067A1896059A6433845F982106413E723344C23
D8A452AD22B6F928D7B018B117F78B4D77770C7CD58CB11B8828F799234686E5
8C15CCE19DA9C1331639355CC718755E2DC89B25ECACB4752B665E2C2993C9A0
FFD92EE5F7E655A0204C76D743D9C1267FE3C3C5D7E0FCC7F46FBC05C2B14FC4
FF430EABA602002F218759AF3B6906ECC1BED9D5E2F5A1AA843B53B69206BBC7
E6D71ABAE31FC20AED0FBAFDB842D92D73574AB1DB4C95DFC7D6D8EC55ADFB1A
C7E5808B9F25EC5DA05580F599FED28F1DD55E7ED75922D7D4AF0C3E5626ACD9
94D0ED516FE519DA32BC972BDC5F60F49FE05A4CB9CD09515EBB586A006D2237
31FF9419D5E841DBD7139B40A5FAB7601F3AD771CA3FFA9518F5BA89902A2963
AEE6BAA398C47B32E460ACE969639FD84CD7B20FF0A5985CDEEB3E3A33364868
1DA9FF74D4DDC30C746B246F07CBEADCE714782E247E1081085F0DF457D90487
C7054C5F2D40A2890BAC6BD73BDBCE6DBAB2B4525D9E8B96FA260E465548252F
242F8C6A738FA0A9596BCAB0593CD250DAC9AC42B2B8D1322737AFBB5E80BE42
021E676354B089C07FB98A70E19448D25F2BD65B9B1A9417475C3D9ABBFCC257
43A92C9B2C1A949420EF5B68A8C1B3D39E3FBA676E9534B22006E72961128BEE
1EA9B11878789F256A029C2C839D16C5DD710E24D9F2A6A03AE125F64CC8402B
EF83B069FBA179A34A39A7315F9E57C7296E69D688FCCCB72D3DE9AD71D1F071
7E5B236A09409941A3606C0039019E61BF1A59C12C2A8DED6AA8644F15944882
2EA63D80C90FDEA1272BE4D99D73D4A9038735457BFCA724DBF49FF91516D957
58EDD72A6807895EC7711F32C79C1163DECD9C32B01898359673DFDE35A151AA
0427CC5E44F7C7A34ACD356EF742E3FA7CC546E15E0A3618D9EDBBF76D5EE1D1
2A03FE2C63F8A90183A476D8F0ECADC9B5B5C4646CF035AF6D0416FF40C390C0
43F660B5EA24E15A750CA21EB302724329CC24BCA55F35016D3D91250CD0549B
AD6204E1DC15025BC7CC5EBDE6C5D41B4D72C95B6A648BAC063E0390B8125F48
BB2E5914BE02D4E341879233A78AA263EAE39094AB779A830C7B8B609C79E65D
2B59BC8A0D0F9764BADADE6E21BFEADAF4A3B146A758CB55B04E1BA4901774AA
089EA2D2B39D2565FEE590A87B37106ABCC89C1C1E0D8EBA843085A7846B2E83
6D198A2920C27D8ECD652E32BC0767F03BC7966029A1F344445BCB2211DF36EE
1323B6716FD3CE289CE5EFAEF98B12B5C36CBD703A3BDFB6C97F972D06F58EEB
02B8696EA1A7A77E8D54ED3C68E4BB0402710943190D961F4DCFDDA07A5C433D
4E51B34D872D4AD6642C6A3096015EAA29A9D35ED07A15A2D8171ACE174D9CC0
339E3B02511F32F499E912FD6EA5F265413390AFA20B2C7CC2543DF61B091341
179AE0EAD24BDB62F6BBCB77CF14F8D1721DE14727AF53A9584687D09F0F736D
4686847078E879D093A9E0E9D5A73B839A9B68B28DC7420193B0A8096738DA00
54C6DFC113D30AEBBE6DAAD6D843A8D0E8B4CF4945378C1DF388E1EEDF4DA179
F91BE9F61F3192036E10F3F8539D22C3B483C03078376806B281E0759C0DE710
55C6D50E22EB7307A92C0B845BA11D0D54B9288523761AEB1E6D79A424AEE193
6648F834CEFA743E45CFF5B4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /OISENI+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 360 252 re
W
q
q
[0.1 0 0 0.1 0 0] cm
{} settransfer
5 w
3.8 M
/DeviceRGB {} CS
[0 0 0] SC
462.5 400 m
478 400 l
3374.5 400 m
3359 400 l
462.5 695 m
478 695 l
3374.5 695 m
3359 695 l
462.5 904 m
478 904 l
3374.5 904 m
3359 904 l
462.5 1066.5 m
478 1066.5 l
3374.5 1066.5 m
3359 1066.5 l
462.5 1199 m
478 1199 l
3374.5 1199 m
3359 1199 l
462.5 1311 m
478 1311 l
3374.5 1311 m
3359 1311 l
462.5 1408 m
478 1408 l
3374.5 1408 m
3359 1408 l
462.5 1494 m
478 1494 l
3374.5 1494 m
3359 1494 l
S
[5 10] 0 d
1.25 w
462.5 1570.5 m
3374.5 1570.5 l
S
[] 0 d
5 w
462.5 1570.5 m
494 1570.5 l
3374.5 1570.5 m
3343 1570.5 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 19.2902 151.635] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(3)
[5.56
0] Tj
Q
462.5 2074.5 m
478 2074.5 l
3374.5 2074.5 m
3359 2074.5 l
462.5 2369.5 m
478 2369.5 l
3374.5 2369.5 m
3359 2369.5 l
S
[5 10] 0 d
1.25 w
462.5 400 m
462.5 2369.5 l
S
[] 0 d
5 w
462.5 400 m
462.5 431.5 l
462.5 2369.5 m
462.5 2338 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.5203 22.0852] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(3)
[5.56
0] Tj
Q
1339 400 m
1339 415.5 l
1339 2369.5 m
1339 2354 l
1852 400 m
1852 415.5 l
1852 2369.5 m
1852 2354 l
2215.5 400 m
2215.5 415.5 l
2215.5 2369.5 m
2215.5 2354 l
2498 400 m
2498 415.5 l
2498 2369.5 m
2498 2354 l
2728.5 400 m
2728.5 415.5 l
2728.5 2369.5 m
2728.5 2354 l
2923.5 400 m
2923.5 415.5 l
2923.5 2369.5 m
2923.5 2354 l
3092.5 400 m
3092.5 415.5 l
3092.5 2369.5 m
3092.5 2354 l
3241.5 400 m
3241.5 415.5 l
3241.5 2369.5 m
3241.5 2354 l
S
[5 10] 0 d
1.25 w
3374.5 400 m
3374.5 2369.5 l
S
[] 0 d
5 w
3374.5 400 m
3374.5 431.5 l
3374.5 2369.5 m
3374.5 2338 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 327.72 22.0852] Tm
0 0 Td
/F8_0 12.5 Tf
(10)
[6.95
0
6.95
0] Tj
13.9 6.25 Td
/F8_0 10 Tf
(4)
[5.56
0] Tj
Q
462.5 400 2912 1969.5 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 14.1648 82.875] Tm
0 0 Td
/F8_0 12.5 Tf
(performance[Tflops])
[6.95
0
6.95
0
4.1625
0
3.475
0
6.95
0
4.1625
0
10.4125
0
6.95
0
6.95
0
6.25
0
6.95
0
3.475
0
7.6375
0
3.475
0
2.775
0
6.95
0
6.95
0
6.25
0
3.475
0] Tj
[1 0 0 1 151.206 4.58516] Tm
0 0 Td
/F8_0 12.5 Tf
(# of processes)
[6.95
0
3.475
0
6.95
0
3.475
0
3.475
0
6.95
0
4.1625
0
6.95
0
6.25
0
6.95
0
6.25
0
6.25
0
6.95
0
6.25
0] Tj
-91.3688 218.8 Td
(measurement)
[10.4125
0
6.95
0
6.95
0
6.25
0
6.95
0
4.1625
0
6.95
0
10.4125
0
6.95
0
6.95
0
3.475
0] Tj
Q
10 w
539.75 517.5 m
539.75 543.594 518.594 564.75 492.5 564.75 c
466.406 564.75 445.25 543.594 445.25 517.5 c
445.25 491.406 466.406 470.25 492.5 470.25 c
518.594 470.25 539.75 491.406 539.75 517.5 c
S
1 J
492.5 517.5 m
492.5 517.5 l
S
0 J
1416.25 1104 m
1416.25 1130.09 1395.09 1151.25 1369 1151.25 c
1342.91 1151.25 1321.75 1130.09 1321.75 1104 c
1321.75 1077.91 1342.91 1056.75 1369 1056.75 c
1395.09 1056.75 1416.25 1077.91 1416.25 1104 c
S
1 J
1369 1104 m
1369 1104 l
S
0 J
2292.75 1549.5 m
2292.75 1575.59 2271.59 1596.75 2245.5 1596.75 c
2219.41 1596.75 2198.25 1575.59 2198.25 1549.5 c
2198.25 1523.41 2219.41 1502.25 2245.5 1502.25 c
2271.59 1502.25 2292.75 1523.41 2292.75 1549.5 c
S
1 J
2245.5 1549.5 m
2245.5 1549.5 l
S
0 J
3169.75 1917 m
3169.75 1943.09 3148.59 1964.25 3122.5 1964.25 c
3096.41 1964.25 3075.25 1943.09 3075.25 1917 c
3075.25 1890.91 3096.41 1869.75 3122.5 1869.75 c
3148.59 1869.75 3169.75 1890.91 3169.75 1917 c
S
1 J
3122.5 1917 m
3122.5 1917 l
S
0 J
1650.25 2275.5 m
1650.25 2301.59 1629.09 2322.75 1603 2322.75 c
1576.91 2322.75 1555.75 2301.59 1555.75 2275.5 c
1555.75 2249.41 1576.91 2228.25 1603 2228.25 c
1629.09 2228.25 1650.25 2249.41 1650.25 2275.5 c
S
1 J
1603 2275.5 m
1603 2275.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 77.8875 210.885] Tm
0 0 Td
/F8_0 12.5 Tf
(35% of TP)
[6.95
0
6.95
0
11.1125
0
3.475
0
6.95
0
3.475
0
3.475
0
7.6375
0
8.3375
0] Tj
Q
[20 10] 0 d
0 J
1437.5 2150.5 m
1769 2150.5 l
462.5 601.5 m
492 618.5 l
521.5 635.5 l
550.5 652.5 l
580 669.5 l
609.5 686 l
639 703 l
668.5 720 l
698 737 l
727 754 l
756.5 771 l
786 787.5 l
815.5 804.5 l
845 821.5 l
874.5 838.5 l
903.5 855.5 l
933 872.5 l
962.5 889 l
992 906 l
1021.5 923 l
1051 940 l
1080 957 l
1109.5 974 l
1139 990.5 l
1168.5 1007.5 l
1198 1024.5 l
1227.5 1041.5 l
1256.5 1058.5 l
1286 1075.5 l
1315.5 1092 l
1345 1109 l
1374.5 1126 l
1404 1143 l
1433 1160 l
1462.5 1177 l
1492 1193.5 l
1521.5 1210.5 l
1551 1227.5 l
1580 1244.5 l
1609.5 1261.5 l
1639 1278.5 l
1668.5 1295 l
1698 1312 l
1727.5 1329 l
1756.5 1346 l
1786 1363 l
1815.5 1379.5 l
1845 1396.5 l
1874.5 1413.5 l
1904 1430.5 l
1933 1447.5 l
1962.5 1464.5 l
1992 1481 l
2021.5 1498 l
2051 1515 l
2080.5 1532 l
2109.5 1549 l
2139 1566 l
2168.5 1582.5 l
2198 1599.5 l
2227.5 1616.5 l
2257 1633.5 l
2286 1650.5 l
2315.5 1667.5 l
2345 1684 l
2374.5 1701 l
2404 1718 l
2433 1735 l
2462.5 1752 l
2492 1769 l
2521.5 1785.5 l
2551 1802.5 l
2580.5 1819.5 l
2609.5 1836.5 l
2639 1853.5 l
2668.5 1870.5 l
2698 1887 l
2727.5 1904 l
2757 1921 l
2786 1938 l
2815.5 1955 l
2845 1972 l
2874.5 1988.5 l
2904 2005.5 l
2933.5 2022.5 l
2962.5 2039.5 l
2992 2056.5 l
3021.5 2073.5 l
3051 2090 l
3080.5 2107 l
3110 2124 l
3139 2141 l
3168.5 2158 l
3198 2175 l
3227.5 2191.5 l
3257 2208.5 l
3286.5 2225.5 l
3315.5 2242.5 l
3345 2259.5 l
3374.5 2276.5 l
S
[] 0 d
5 w
462.5 400 2912 1969.5 re
S
{} settransfer
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font OISENI+Helvetica
%%EOF
